Windows PowerShell
Copyright (C) Microsoft Corporation. All rights reserved.

Install the latest PowerShell for new features and improvements! https://aka.ms/PSWindows

File C:\Users\Alaka\PycharmProjects\spider-master\venv\Scripts\activate.ps1 cannot be loaded because running scripts is disabled on this system. For more information, see
about_Execution_Policies at https:/go.microsoft.com/fwlink/?LinkID=135170.
    + CategoryInfo          : SecurityError: (:) [], ParentContainsErrorRecordException
    + FullyQualifiedErrorId : UnauthorizedAccess
PS C:\Users\Alaka\PycharmProjects\spider-master> python evaluation.py --gold data/text_files/train_gold.txt --pred data/text_files/pred_train.txt --etype all  --db data/spider/database --table data/spider/tables.json
eval_err_num:1
extra pred: SELECT T1.state FROM election AS T1 JOIN candidate_assessments AS T2 ON T1.address_id = T2.player_id WHERE dept_name = "Computer Info. Systems"
extra gold: SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id JOIN head AS T3 ON T2.head_id  =  T3.head_id WHERE T1.name  =  'Tr
easury' INTERSECT SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id JOIN head AS T3 ON T2.head_id  =  T3.head_id WHERE T1.name  =  'Homeland Security'

eval_err_num:2
easy pred: SELECT count(*) FROM useracct
easy gold: SELECT count(*) FROM user_profiles

eval_err_num:3
easy pred: SELECT count(*) FROM Employees;
easy gold: SELECT count(*) FROM Employee

eval_err_num:4
extra pred: SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = "Boeing 737-800" INTERSECT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid WHERE T1.register_year = "Boeing 737-800"
extra gold: SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  "Boeing 737-800" INTERSECT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  "Airbus A340-300"

eval_err_num:5
extra pred: SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = "Boeing 737-800" INTERSECT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid WHERE T2.Gname = "Boeing 737-800"
extra gold: SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  "Boeing 737-800" INTERSECT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  "Airbus A340-300"

eval_err_num:6
extra pred: SELECT T2.name FROM genres AS T1 JOIN playlist_tracks AS T2 ON T1.Aircraft_ID = T2.f_id WHERE T1.formats = "Graphics" EXCEPT SELECT T2.pilot FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Type = "Jazz"
extra gold: SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Movies' EXCEPT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Music'

eval_err_num:7
extra pred: SELECT Name FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.playlist_id = "Balls to the Wall";
extra gold: SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Movies' EXCEPT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Music'

eval_err_num:8
extra pred: SELECT T1.name FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.name = "Rock" INTERSECT SELECT T1.name FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.name = "Jazz"
extra gold: SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Movies' INTERSECT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Music'

eval_err_num:9
extra pred: SELECT T1.name FROM genres AS T1 JOIN tracks AS T2 ON T1.f_id = T2.track_id WHERE T1.name = "Balls to the Wall";
extra gold: SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Movies' INTERSECT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Music'

eval_err_num:10
extra pred: SELECT T1.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid = T2.albumid JOIN songs AS T3 ON T2.songid = T3.songid WHERE t1.label = "A Kiss Before You Go: Live in Hamburg"
extra gold: SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  'Reggae' INTERSECT SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  'Rock'

eval_err_num:11
extra pred: SELECT title FROM albums WHERE title = 'Statistics' INTERSECT SELECT title FROM albums WHERE TYPE = 'Psychology'
extra gold: SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  'Reggae' INTERSECT SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  'Rock'

eval_err_num:12
extra pred: SELECT T1.customer_name FROM customers AS T1 JOIN first_notification_of_loss AS T2 ON T1.service_id = T2.service_id WHERE t3.service_name = "Close a city' INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN EVENTS AS T2 ON T1.service_id = T2.service_id WHERE T2.event_details = 'Fail'
extra gold: SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_
id WHERE t3.service_name  =  "Close a policy" INTERSECT SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  "New policy application"

eval_err_num:13
extra pred: SELECT T1.name FROM player AS T1 JOIN stadium AS T2 ON T1.id = T2.id WHERE T2.name_first = "Rock" INTERSECT SELECT T1.name FROM player AS T1 JOIN stadium AS T2 ON T1.id = T2.stadium_id WHERE T2.Position = "Rock";
extra gold: SELECT T2.name FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.id JOIN injury_accident AS T3 ON T1.id  =  T3.game_id WHERE T3.player  =  'Walter Samuel' INTERSECT SELECT T2.name FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.id JOIN injury_accident AS T3 ON T1.id  =  T3.game_id WHERE T3.player  =  'Thiago Motta'

eval_err_num:14
extra pred: SELECT T1.name FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id = T2.browser_id JOIN web_client_accelerator AS T3 ON T2.accelerator_id = T3.id WHERE T3.name = 'CProxy' INTERSECT SELECT T1.name FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id = T2.browser_id WHERE T2.name = 'activitor'
extra gold: SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHER
E T1.name  =  'CACHEbox' INTERSECT SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T1.name  =  'Fasterfox'

eval_err_num:15
extra pred: SELECT T1.driverid FROM results AS T1 JOIN races AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T1.name = "Nanjing T1.driverid AND T1.driverid = T1.driverid
extra gold: SELECT T2.driverid ,  T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid  =  T3.driverid WHERE T1.name = "Australian
 Grand Prix" INTERSECT SELECT T2.driverid ,  T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid  =  T3.driverid WHERE T1.name = "Chinese Grand Prix"

extra pred: SELECT T1.driverid , T1.forename FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T3.year = '1' AND T1.driverid = '1'
extra gold: SELECT T2.driverid ,  T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid  =  T3.driverid WHERE T1.name = "Australian
 Grand Prix" INTERSECT SELECT T2.driverid ,  T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid  =  T3.driverid WHERE T1.name = "Chinese Grand Prix"

eval_err_num:16
extra pred: SELECT T1.surname , T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid WHERE T1.year = 93000 EXCEPT SELECT T1.surname , T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid WHERE T1.year = 1
extra gold: SELECT T3.forename ,  T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = "Australian Gr
and Prix" EXCEPT SELECT T3.forename ,  T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = "Chinese Grand Prix"

eval_err_num:17
extra pred: SELECT T1.surname , t3.lname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid WHERE T1.age = 1 EXCEPT SELECT T1.surname , T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid WHERE T1.year = 1
extra gold: SELECT T3.forename ,  T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = "Australian Gr
and Prix" EXCEPT SELECT T3.forename ,  T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = "Chinese Grand Prix"

extra pred: SELECT T1.surname , T1.driverid , T1.surname FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid = T2.driverid GROUP BY T1.driverid HAVING count(*) > 11 UNION SELECT T1.surname , T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid GROUP BY T1.driverid HAVING count(*) > 5
extra gold: SELECT T1.forename ,  T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  8 UNION SELECT T1.forename ,  T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  5

eval_err_num:18
extra pred: SELECT stu_fname , T1.forename , account_name FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid = T2.driverid GROUP BY T1.driverid HAVING count(*) > 11 UNION SELECT T1.forename , t1.other_characteristic_details , t1.characteristic_data_type FROM employees AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid GROUP BY T1.driverid HAVING count(*) > 5
extra gold: SELECT T1.forename ,  T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  8 UNION SELECT T1.forename ,  T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  5

eval_err_num:19
easy pred: SELECT count(*) FROM country
easy gold: SELECT count(*) FROM county_public_safety

extra pred: SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id WHERE T1.name = 'Denmark' INTERSECT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id WHERE T1.name = 'Denmark'
extra gold: SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  'Afgha
nistan' INTERSECT SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  'Albania'

eval_err_num:20
extra pred: SELECT T1.name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id JOIN storm AS T3 ON T1.storm_id = T3.storm_id WHERE T2.region_name = 'Denmark'
extra gold: SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  'Afgha
nistan' INTERSECT SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  'Albania'

eval_err_num:21
easy pred: SELECT count(*) FROM customers
easy gold: SELECT sum(no_of_customers) FROM bank

Traceback (most recent call last):
  File "C:\Users\Alaka\PycharmProjects\spider-master\evaluation.py", line 868, in <module>
    evaluate(gold, pred, db_dir, etype, kmaps)
  File "C:\Users\Alaka\PycharmProjects\spider-master\evaluation.py", line 507, in evaluate
    g_sql = get_sql(schema, g_str)
  File "C:\Users\Alaka\PycharmProjects\spider-master\process_sql.py", line 556, in get_sql
    _, sql = parse_sql(toks, 0, tables_with_alias, schema)
  File "C:\Users\Alaka\PycharmProjects\spider-master\process_sql.py", line 508, in parse_sql
    from_end_idx, table_units, conds, default_tables = parse_from(toks, start_idx, tables_with_alias, schema)
  File "C:\Users\Alaka\PycharmProjects\spider-master\process_sql.py", line 393, in parse_from
    idx, table_unit, table_name = parse_table_unit(toks, idx, tables_with_alias, schema)
  File "C:\Users\Alaka\PycharmProjects\spider-master\process_sql.py", line 264, in parse_table_unit
    key = tables_with_alias[toks[idx]]
KeyError: 'ref_company_types'
PS C:\Users\Alaka\PycharmProjects\spider-master> python evaluation.py --gold data/text_files/train_gold.txt --pred data/text_files/pred_train.txt --etype all  --db data/spider/database
 --table data/spider/tables.json
eval_err_num:1
extra pred: SELECT T1.state FROM election AS T1 JOIN candidate_assessments AS T2 ON T1.address_id = T2.player_id WHERE dept_name = "Computer Info. Systems"
extra gold: SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id JOIN head AS T3 ON T2.head_id  =  T3.head_id WHERE T1.name  =  'Tr
easury' INTERSECT SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id JOIN head AS T3 ON T2.head_id  =  T3.head_id WHERE T1.name  =  'Homeland Security'

eval_err_num:2
easy pred: SELECT count(*) FROM useracct
easy gold: SELECT count(*) FROM user_profiles

eval_err_num:3
easy pred: SELECT count(*) FROM Employees;
easy gold: SELECT count(*) FROM Employee

eval_err_num:4
extra pred: SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = "Boeing 737-800" INTERSECT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid WHERE T1.register_year = "Boeing 737-800"
extra gold: SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  "Boeing 737-800" INTERSECT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  "Airbus A340-300"

eval_err_num:5
extra pred: SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T3.name = "Boeing 737-800" INTERSECT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid WHERE T2.Gname = "Boeing 737-800"
extra gold: SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  "Boeing 737-800" INTERSECT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  "Airbus A340-300"

eval_err_num:6
extra pred: SELECT T2.name FROM genres AS T1 JOIN playlist_tracks AS T2 ON T1.Aircraft_ID = T2.f_id WHERE T1.formats = "Graphics" EXCEPT SELECT T2.pilot FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Type = "Jazz"
extra gold: SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Movies' EXCEPT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Music'

eval_err_num:7
extra pred: SELECT Name FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.playlist_id = "Balls to the Wall";
extra gold: SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Movies' EXCEPT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Music'

eval_err_num:8
extra pred: SELECT T1.name FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.name = "Rock" INTERSECT SELECT T1.name FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.name = "Jazz"
extra gold: SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Movies' INTERSECT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Music'

eval_err_num:9
extra pred: SELECT T1.name FROM genres AS T1 JOIN tracks AS T2 ON T1.f_id = T2.track_id WHERE T1.name = "Balls to the Wall";
extra gold: SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Movies' INTERSECT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Music'

eval_err_num:10
extra pred: SELECT T1.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid = T2.albumid JOIN songs AS T3 ON T2.songid = T3.songid WHERE t1.label = "A Kiss Before You Go: Live in Hamburg"
extra gold: SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  'Reggae' INTERSECT SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  'Rock'

eval_err_num:11
extra pred: SELECT title FROM albums WHERE title = 'Statistics' INTERSECT SELECT title FROM albums WHERE TYPE = 'Psychology'
extra gold: SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  'Reggae' INTERSECT SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  'Rock'

eval_err_num:12
extra pred: SELECT T1.customer_name FROM customers AS T1 JOIN first_notification_of_loss AS T2 ON T1.service_id = T2.service_id WHERE t3.service_name = "Close a city' INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN EVENTS AS T2 ON T1.service_id = T2.service_id WHERE T2.event_details = 'Fail'
extra gold: SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_
id WHERE t3.service_name  =  "Close a policy" INTERSECT SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  "New policy application"

eval_err_num:13
extra pred: SELECT T1.name FROM player AS T1 JOIN stadium AS T2 ON T1.id = T2.id WHERE T2.name_first = "Rock" INTERSECT SELECT T1.name FROM player AS T1 JOIN stadium AS T2 ON T1.id = T2.stadium_id WHERE T2.Position = "Rock";
extra gold: SELECT T2.name FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.id JOIN injury_accident AS T3 ON T1.id  =  T3.game_id WHERE T3.player  =  'Walter Samuel' INTERSECT SELECT T2.name FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.id JOIN injury_accident AS T3 ON T1.id  =  T3.game_id WHERE T3.player  =  'Thiago Motta'

eval_err_num:14
extra pred: SELECT T1.name FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id = T2.browser_id JOIN web_client_accelerator AS T3 ON T2.accelerator_id = T3.id WHERE T3.name = 'CProxy' INTERSECT SELECT T1.name FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id = T2.browser_id WHERE T2.name = 'activitor'
extra gold: SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHER
E T1.name  =  'CACHEbox' INTERSECT SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T1.name  =  'Fasterfox'

eval_err_num:15
extra pred: SELECT T1.driverid FROM results AS T1 JOIN races AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T1.name = "Nanjing T1.driverid AND T1.driverid = T1.driverid
extra gold: SELECT T2.driverid ,  T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid  =  T3.driverid WHERE T1.name = "Australian
 Grand Prix" INTERSECT SELECT T2.driverid ,  T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid  =  T3.driverid WHERE T1.name = "Chinese Grand Prix"

extra pred: SELECT T1.driverid , T1.forename FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T3.year = '1' AND T1.driverid = '1'
extra gold: SELECT T2.driverid ,  T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid  =  T3.driverid WHERE T1.name = "Australian
 Grand Prix" INTERSECT SELECT T2.driverid ,  T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid  =  T3.driverid WHERE T1.name = "Chinese Grand Prix"

eval_err_num:16
extra pred: SELECT T1.surname , T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid WHERE T1.year = 93000 EXCEPT SELECT T1.surname , T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid WHERE T1.year = 1
extra gold: SELECT T3.forename ,  T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = "Australian Gr
and Prix" EXCEPT SELECT T3.forename ,  T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = "Chinese Grand Prix"

eval_err_num:17
extra pred: SELECT T1.surname , t3.lname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid WHERE T1.age = 1 EXCEPT SELECT T1.surname , T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid WHERE T1.year = 1
extra gold: SELECT T3.forename ,  T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = "Australian Gr
and Prix" EXCEPT SELECT T3.forename ,  T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = "Chinese Grand Prix"

extra pred: SELECT T1.surname , T1.driverid , T1.surname FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid = T2.driverid GROUP BY T1.driverid HAVING count(*) > 11 UNION SELECT T1.surname , T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid GROUP BY T1.driverid HAVING count(*) > 5
extra gold: SELECT T1.forename ,  T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  8 UNION SELECT T1.forename ,  T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  5

eval_err_num:18
extra pred: SELECT stu_fname , T1.forename , account_name FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid = T2.driverid GROUP BY T1.driverid HAVING count(*) > 11 UNION SELECT T1.forename , t1.other_characteristic_details , t1.characteristic_data_type FROM employees AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid GROUP BY T1.driverid HAVING count(*) > 5
extra gold: SELECT T1.forename ,  T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  8 UNION SELECT T1.forename ,  T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  5

eval_err_num:19
easy pred: SELECT count(*) FROM country
easy gold: SELECT count(*) FROM county_public_safety

extra pred: SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id WHERE T1.name = 'Denmark' INTERSECT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id WHERE T1.name = 'Denmark'
extra gold: SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  'Afgha
nistan' INTERSECT SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  'Albania'

eval_err_num:20
extra pred: SELECT T1.name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id JOIN storm AS T3 ON T1.storm_id = T3.storm_id WHERE T2.region_name = 'Denmark'
extra gold: SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  'Afgha
nistan' INTERSECT SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  'Albania'

eval_err_num:21
easy pred: SELECT count(*) FROM customers
easy gold: SELECT sum(no_of_customers) FROM bank

eval_err_num:22
medium pred: SELECT count(*) , dept_name FROM student GROUP BY dept_name
medium gold: SELECT count(*) ,  dept_code FROM student GROUP BY dept_code

extra pred: SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN student AS T3 ON T2.stu_num = T3.stu_num WHERE T1.crs_code = 'ACCT-211' AND T2.enroll_grade = 'C'
extra gold: SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code
=  T4.crs_code JOIN department AS T5 ON T5.dept_code  =  T4.dept_code WHERE T5.dept_name  =  'Accounting' INTERSECT SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_n
um  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code JOIN department AS T5 ON T5.dept_code  =  T4.dept_code WHERE T5.dept_name  =  'Computer Info. Systems'

extra pred: SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN student AS T3 ON T2.stu_num = T3.stu_num WHERE T1.crs_code = 'ACCT-211' AND T2.enroll_grade = 'C'
extra gold: SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code
=  T4.crs_code JOIN department AS T5 ON T5.dept_code  =  T4.dept_code WHERE T5.dept_name  =  'Accounting' INTERSECT SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_n
um  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code JOIN department AS T5 ON T5.dept_code  =  T4.dept_code WHERE T5.dept_name  =  'Computer Info. Systems'

eval_err_num:23
extra pred: SELECT name FROM furniture WHERE Furniture_ID = 'Tokyo' INTERSECT SELECT OWNER FROM Companies WHERE Launch_year > 10
extra gold: SELECT t3.name FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID  =  t2.Furniture_ID JOIN manufacturer AS t3 ON t2.manufacturer_id  =  t3.manufacturer_
id WHERE t1.num_of_component  <  6 INTERSECT SELECT t3.name FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID  =  t2.Furniture_ID JOIN manufacturer AS t3 ON t2.manufacturer_id  =  t3.manufacturer_id WHERE t1.num_of_component  >  10

eval_err_num:24
extra pred: SELECT sum(T1.salary) , name_last FROM player AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T1.year = 1998 AND T2.name_last = 'Barker'
extra gold: SELECT T2.name_first ,  T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2005 A
ND T3.name = 'Washington Nationals' INTERSECT SELECT T2.name_first , T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2007 AND T3.name = 'Washington Nationals'

eval_err_num:25
extra pred: SELECT name_first , name_last FROM employee AS T1 JOIN salary AS T2 ON T1.player_id = T2.player_id WHERE T2.name = 'Boston Red Stockings' INTERSECT SELECT salary FROM salary WHERE T1.year = 2001
extra gold: SELECT T2.name_first ,  T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2005 A
ND T3.name = 'Washington Nationals' INTERSECT SELECT T2.name_first , T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2007 AND T3.name = 'Washington Nationals'

eval_err_num:26
extra pred: SELECT t3.characteristic_name FROM Grapes AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T2.name = "Graphics"
extra gold: SELECT T3.brand FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id JOIN camera_lens AS T3 ON T2.camera_lens_id  =  T3.id WHERE T1.range  =  'Toubkal Atlas' INTERSECT SELECT T3.brand FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id JOIN camera_lens AS T3 ON T2.camera_lens_id  =  T3.id WHERE T1.range  =  'Lasta Massif'

extra pred: SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T3.name = 'Sur
gery' INTERSECT SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T2.PrimaryAffiliation = 1
extra gold: SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =
  'Surgery' INTERSECT SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Psychiatry'

extra pred: SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T3.name = 'Sur
gery' INTERSECT SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T2.PrimaryAffiliation = 1
extra gold: SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =
  'Surgery' INTERSECT SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Psychiatry'

eval_err_num:27
easy pred: SELECT count(*) FROM student
easy gold: SELECT count(*) FROM list

eval_err_num:28
extra pred: SELECT T1.id , T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id = T2.project_id WHERE T2.project_details = 'Graph Book"
extra gold: SELECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'omnis' UNION SEL
ECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.project_id HAVING count(*)  >  2

eval_err_num:29
extra pred: SELECT T1.Char_cells , T1.project_details , T1.formats FROM Orders AS T1 JOIN Projects AS T2 ON T1.project_id = T2.project_id WHERE T2.project_details = "Ebba" OR T1.Date_and_Date >= '2017-06-19 Book'
extra gold: SELECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'omnis' UNION SEL
ECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.project_id HAVING count(*)  >  2

eval_err_num:30
extra pred: SELECT T2.school_name FROM Grants AS T1 JOIN Document_Types AS T2 ON T1.project_id = T2.document_id WHERE T2.sent_date = 'Sponsor' INTERSECT SELECT T1.donator_name FROM grants AS T1 JOIN Organisations AS T2 ON T1.Participant_ID = T2.Participant_ID WHERE grant_end_date = 1961
extra gold: SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code  =  T3.document_type_cod
e WHERE T3.document_description  =  'Regular' INTERSECT SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code  =  T3.document_type_code WHERE T3.document_description  =  'Initial Application'

eval_err_num:31
extra pred: SELECT sum(T2.hours) , T1.skill_description FROM Organisations AS T1 JOIN Project_outcomes AS T2 ON T1.registration_id = T2.registration_id WHERE T1.Amount_Claimed = 10
extra gold: SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code  =  T3.document_type_cod
e WHERE T3.document_description  =  'Regular' INTERSECT SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code  =  T3.document_type_code WHERE T3.document_description  =  'Initial Application'

eval_err_num:32
extra pred: SELECT name FROM PersonFriend WHERE age > 30 AND job = 'Zach'
extra gold: SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  >  40) INTERSECT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  <  30)

eval_err_num:33
extra pred: SELECT name FROM PersonFriend WHERE age > 30 AND job = 'engineer'
extra gold: SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  >  40) INTERSECT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  <  30)

eval_err_num:34
extra pred: SELECT name FROM PersonFriend WHERE age > 30 AND job != 'engineer'
extra gold: SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  >  40) EXCEPT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  <  30)

eval_err_num:35
extra pred: SELECT name FROM people WHERE age > 30 AND people_id NOT IN (SELECT male_id FROM candidate)
extra gold: SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  >  40) EXCEPT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  <  30)

eval_err_num:36
easy pred: SELECT count(*) FROM COURSES
easy gold: SELECT count(*) FROM COURSE

extra pred: SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID = T3.Airport_ID WHERE T3.Airport_Name = "London Gatwick"
extra gold: SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airpo
rt_Name  =  "London Heathrow" INTERSECT SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  "London Gatwick"

eval_err_num:37
extra pred: SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID = T3.Airport_ID WHERE T3.Airport_Name = "London Gatwick" INTERSECT SELECT T1.name FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft WHERE T2.Winning_Aircraft = 'GT'
extra gold: SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airpo
rt_Name  =  "London Heathrow" INTERSECT SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  "London Gatwick"

eval_err_num:38
extra pred: SELECT district_name FROM district WHERE city_code = city_area INTERSECT SELECT District_name FROM STUDENT WHERE City_Population = 'mid'
extra gold: SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =
 "City Mall" INTERSECT SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =  "Village Store"

eval_err_num:39
extra pred: SELECT district_name FROM election WHERE city_area = city_area INTERSECT SELECT district_name FROM district WHERE district = 'California'
extra gold: SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =
 "City Mall" INTERSECT SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =  "Village Store"

eval_err_num:40
extra pred: SELECT first_name , last_name FROM staff WHERE good_or_bad_customer = 'APRIL' EXCEPT SELECT address FROM staff WHERE user_login = 1
extra gold: SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.s
taff_id WHERE T2.product_name = "rem" EXCEPT SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = "aut"

eval_err_num:41
extra pred: SELECT date_left_staff , staff_last_name FROM staff WHERE complaint_type_code = 'Black' EXCEPT SELECT T1.staff_name , staff_last_name FROM staff AS T1 JOIN complaints AS T2 ON T1.staff_id = T2.EmployeeID WHERE T2.staff_first_name = 'Elsa'
extra gold: SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.s
taff_id WHERE T2.product_name = "rem" EXCEPT SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = "aut"

eval_err_num:42
extra pred: SELECT count(*) FROM products AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id WHERE T2.staff_first_name = 'Creative Labs' INTERSECT SELECT T2.product_id FROM problems AS T1 JOIN staff AS T2 ON T1.closure_authorised_by_staff_id = T2.staff_id WHERE T2.staff_first_name = "Ashley"
extra gold: SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_fir
st_name = "Lacey" AND T3.staff_last_name = "Bosco" INTERSECT SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_first_name = "Kenton" AND T3.staff_last_name = "Champlin"

eval_err_num:43
extra pred: SELECT T1.product_name FROM products AS T1 JOIN problems AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = "Christop" INTERSECT SELECT T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T2.staff_first_name = "Christop"
extra gold: SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_fir
st_name = "Lacey" AND T3.staff_last_name = "Bosco" INTERSECT SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_first_name = "Kenton" AND T3.staff_last_name = "Champlin"

eval_err_num:44
extra pred: SELECT bname FROM branch WHERE address = 'New York'
extra gold: SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id WHERE T3.Hometown
  =  'Louisville ,  Kentucky' INTERSECT SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id WHERE T3.Hometown  =  'Hiram ,  Georgia'

eval_err_num:45
extra pred: SELECT bname FROM member WHERE Party = 'Tokyo' AND Building = "NEB"
extra gold: SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id WHERE T3.Hometown
  =  'Louisville ,  Kentucky' INTERSECT SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id WHERE T3.Hometown  =  'Hiram ,  Georgia'

eval_err_num:46
easy pred: SELECT count(*) FROM list
easy gold: SELECT count(*) FROM STUDENT

eval_err_num:47
extra pred: SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.dorm_name = 'Smith Donor Ha
ll' INTERSECT SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'TV Lounge'
extra gold: SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'TV Loung
e' INTERSECT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'Study Room'

eval_err_num:48
extra pred: SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.student_capacity = 'TV Lounge' INTERSECT SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid WHERE T3.amenity_name = 'TV Lounge'
extra gold: SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'TV Loung
e' INTERSECT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'Study Room'

extra pred: SELECT dorm_name FROM dorm WHERE dorm_name = 'F' EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'TV Lounge'
extra gold: SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'TV Loung
e' EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'Study Room'

extra pred: SELECT dorm_name FROM dorm WHERE dorm_name = 'F' EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'TV Lounge'
extra gold: SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'TV Loung
e' EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'Study Room'

extra pred: SELECT Name FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There = "bus" OR How_to_Get_There = "walk"
extra gold: SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id  =  T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feat
ure_ID  =  T3.Feature_ID WHERE T3.feature_Details  =  'park' UNION SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id  =  T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID  =  T3.Feature_ID WHERE T3.feature_Details  =  'shopping'

extra pred: SELECT Name FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There = "bus" OR How_to_Get_There = "walk"
extra gold: SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id  =  T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feat
ure_ID  =  T3.Feature_ID WHERE T3.feature_Details  =  'park' UNION SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id  =  T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID  =  T3.Feature_ID WHERE T3.feature_Details  =  'shopping'

eval_err_num:49
extra pred: SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Location_ID = T2.Location_ID JOIN VISITORS AS T3 ON T2.Tourist_ID = T3.Tourist_ID WHERE T3.Tourist_Details = "Vincent"
extra gold: SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Touris
t_ID WHERE T2.Tourist_Details  =  "Vincent" INTERSECT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  "Marcelle"

extra pred: SELECT Name FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There = "bus"
extra gold: SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Touris
t_ID WHERE T2.Tourist_Details  =  "Vincent" INTERSECT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  "Marcelle"

eval_err_num:50
extra pred: SELECT Name FROM TOURIST_ATTRACTIONS WHERE T1.Name NOT IN (SELECT Host_ID FROM party_host)
extra gold: SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Touris
t_ID WHERE T2.Tourist_Details  =  "Alison" EXCEPT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  "Rosalind"

extra pred: SELECT Name FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There = "bus" EXCEPT SELECT How_to_Get_There FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There = "bus"
extra gold: SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Touris
t_ID WHERE T2.Tourist_Details  =  "Alison" EXCEPT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  "Rosalind"

eval_err_num:51
extra pred: SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = "On Road" INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = "Shipped"
extra gold: SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN prod
ucts AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Latte' INTERSECT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Americano'

eval_err_num:52
extra pred: SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id JOIN order_items AS T3 ON T2.order_id = T3.order_id WHERE t1.customer_name = T3.order_id AND T4.product_name = "food"
extra gold: SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN prod
ucts AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Latte' INTERSECT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Americano'

eval_err_num:53
extra pred: SELECT T1.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.Airport_Name = 'Michael Rogers' INTERSECT SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.scientist WHERE T2.name = 'Sony'
extra gold: SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.name  =  'Matter of Time' INTERSECT SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.name  =  'A Puzzling Parallax'

eval_err_num:54
extra pred: SELECT T1.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name = 'Michael Rogers'
extra gold: SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.name  =  'Matter of Time' INTERSECT SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.name  =  'A Puzzling Parallax'

eval_err_num:55
extra pred: SELECT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE T2.order_status = "San Francisco" INTERSECT SELECT T1.name FROM station AS T1 JOIN station AS T2 ON T1.id = T2.station_id WHERE T2.bikes_available = 'GT'
extra gold: SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id WHERE T3.Name  =  "Ananthapuri
 Express" INTERSECT SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id WHERE T3.Name  =  "Guruvayur Express"

extra pred: SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN activity AS T3 ON T2.actid = T2.actid WHERE T3.activity_name = 'Canoeing'
extra gold: SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Cano
eing' INTERSECT SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Kayaking'

extra pred: SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN activity AS T3 ON T2.actid = T2.actid WHERE T3.activity_name = 'Canoeing' INTERSECT SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID WHERE T3.activity_name = 'Kayaking'
extra gold: SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Cano
eing' INTERSECT SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Kayaking'

extra pred: SELECT T1.id , T1.name , T1.nationality FROM architect AS T1 JOIN mill AS T2 ON T1.id = T2.architect_id GROUP BY T1.id HAVING count(*) = 2
extra gold: SELECT T1.id ,  T1.name ,  T1.gender FROM architect AS T1 JOIN bridge AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id HAVING count(*)  =  2 UNION SELECT T1.id ,  T1.name ,  T1.gender FROM architect AS T1 JOIN mill AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id HAVING count(*)  =  1

                     easy                 medium               hard                 extra                all
count                1694                 2777                 1460                 1068                 6999
=====================   EXECUTION ACCURACY     =====================
execution            0.996                1.000                1.000                0.938                0.989

====================== EXACT MATCHING ACCURACY =====================
exact match          0.996                1.000                1.000                0.940                0.990

---------------------PARTIAL MATCHING ACCURACY----------------------
select               1.000                1.000                1.000                0.998                1.000
select(no AGG)       1.000                1.000                1.000                0.998                1.000
order                1.000                1.000                1.000                1.000                1.000
and/or               1.000                1.000                1.000                0.996                0.999
IUEN                 1.000                1.000                1.000                0.815                0.929
keywords             1.000                1.000  python evaluation.py --gold data/text_files/dev_gold.txt --pred data/text_files/pred_dev.txt --etype all  --db data/spider/database --table data/spider/tables.json    s\spider-master>
eval_err_num:1
easy pred: SELECT count(*) FROM artist
easy gold: SELECT count(*) FROM singer

eval_err_num:2
easy pred: SELECT count(*) FROM enzyme
easy gold: SELECT count(*) FROM singer

eval_err_num:3
medium pred: SELECT name , LOCATION , gender_mf FROM artist WHERE gender = 'T' ORDER BY Year_Join
medium gold: SELECT name ,  country ,  age FROM singer ORDER BY age DESC

eval_err_num:4
medium pred: SELECT name , dates_active , age FROM Person ORDER BY age DESC
medium gold: SELECT name ,  country ,  age FROM singer ORDER BY age DESC

eval_err_num:5
medium pred: SELECT T1.artist_name , T1.age , artist_name FROM artist AS T1 JOIN artist AS T2 ON T1.artist_name = T2.artist_name WHERE T2.languages = "Female"
medium gold: SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'

eval_err_num:6
medium pred: SELECT min(distance) , min(age) , min(age) FROM people WHERE nationality = "German"
medium gold: SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'

eval_err_num:7
medium pred: SELECT T1.artist_name , T1.date FROM artist AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id ORDER BY T2.resolution LIMIT 1
medium gold: SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1

eval_err_num:8
medium pred: SELECT song_name , genre_is FROM song ORDER BY emp_dob LIMIT 1
medium gold: SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1

eval_err_num:9
easy pred: SELECT DISTINCT country FROM artist WHERE age > 9
easy gold: SELECT DISTINCT country FROM singer WHERE age  >  20

eval_err_num:10
easy pred: SELECT DISTINCT country FROM artist WHERE age > 30
easy gold: SELECT DISTINCT country FROM singer WHERE age  >  20

eval_err_num:11
medium pred: SELECT country , count(*) FROM artist GROUP BY country
medium gold: SELECT country ,  count(*) FROM singer GROUP BY country

eval_err_num:12
medium pred: SELECT Country_name , COUNT(*) FROM artist AS T1 JOIN country AS T2 ON T1.artist_name = T2.artist_name GROUP BY T1.Musical_ID
medium gold: SELECT country ,  count(*) FROM singer GROUP BY country

eval_err_num:13
hard pred: SELECT song_name FROM artist WHERE Age > (SELECT T1.artist_name FROM song
hard gold: SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)

eval_err_num:14
hard pred: SELECT DISTINCT artist_name FROM artist WHERE age > (SELECT artist_name FROM song WHERE languages = 'english')
hard gold: SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)

medium pred: SELECT LOCATION , LOCATION FROM stadium WHERE capacity BETWEEN 1830 AND 1840
medium gold: SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000

eval_err_num:15
medium pred: SELECT LOCATION , LOCATION FROM station WHERE capacity BETWEEN 1830 AND 15
medium gold: SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000

medium pred: SELECT avg(capacity) , avg(capacity) FROM stadium
medium gold: select max(capacity), average from stadium

eval_err_num:16
medium pred: SELECT avg(student_capacity) , max(salary) FROM stadium
medium gold: select avg(capacity) ,  max(capacity) from stadium

medium pred: SELECT name , capacity FROM stadium ORDER BY capacity DESC LIMIT 1
medium gold: SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1

medium pred: SELECT name , capacity FROM stadium ORDER BY capacity DESC LIMIT 1
medium gold: SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1

eval_err_num:17
medium pred: SELECT count(*) FROM Ref_colors WHERE YEAR = 1885 OR YEAR = "Conglomerate"
medium gold: SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015

eval_err_num:18
medium pred: SELECT count(*) FROM postseason WHERE YEAR = 1885 OR date_from = "Conglomerate"
medium gold: SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015

eval_err_num:19
medium pred: SELECT apt_type_code , count(*) FROM stadium GROUP BY name
medium gold: SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id

eval_err_num:20
medium pred: SELECT count(*) , constructorid FROM constructors GROUP BY Competition
medium gold: SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id

eval_err_num:21
extra pred: SELECT name , capacity FROM stadium WHERE YEAR = 2011 GROUP BY station_id ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:22
extra pred: SELECT T1.name , t1.capacity FROM stadium AS T1 JOIN stadium AS T2 ON T1.id = t2.stadium_id WHERE T2.bikes_available > 1880 GROUP BY T1.building_id ORDER BY count(*) DESC LIMIT 1
extra gold: select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1

eval_err_num:23
hard pred: SELECT YEAR FROM SECTION GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
hard gold: SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1

eval_err_num:24
hard pred: SELECT YEAR FROM SECTION GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
hard gold: SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1

eval_err_num:25
hard pred: SELECT name FROM stadium WHERE building_id NOT IN (SELECT stadium_id FROM event)
hard gold: SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)

eval_err_num:26
hard pred: SELECT name FROM stadium WHERE id NOT IN (SELECT stadium_id FROM event)
hard gold: SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)

eval_err_num:27
hard pred: SELECT country FROM weather WHERE TIME > 10000000 INTERSECT SELECT country FROM competition WHERE age > 1990
hard gold: SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30

eval_err_num:28
hard pred: SELECT name FROM stadium WHERE YEAR = 2011
hard gold: SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014

eval_err_num:29
hard pred: SELECT name FROM stadium WHERE id NOT IN (SELECT stadium_id FROM event) AS T1 JOIN event AS T2 ON t1.event_id = T2.id WHERE name = 'Australia'
hard gold: SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014

eval_err_num:30
medium pred: SELECT premises_type , COUNT(*) FROM artist GROUP BY role_code
medium gold: SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id

eval_err_num:31
medium pred: SELECT T1.artist_name , COUNT(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE TYPE = "Herbs"
medium gold: select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id

eval_err_num:32
medium pred: SELECT max(used_kb) , Company_name FROM mailshot_customers GROUP BY Company_name
medium gold: SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id

eval_err_num:33
medium pred: SELECT T1.artist_name , count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name GROUP BY T2.artist_name
medium gold: SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id

eval_err_num:34
hard pred: SELECT title FROM albums; WHERE YEAR = "Nokia Cameron"
hard gold: SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014

eval_err_num:35
hard pred: SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.languages = "english"
hard gold: SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014

eval_err_num:36
medium pred: SELECT title , chromosome FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = "english"
medium gold: SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'

eval_err_num:37
medium pred: SELECT T1.artist_name , T1.country FROM country AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id WHERE T2.song_name LIKE "%love%"
medium gold: SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'

eval_err_num:38
extra pred: SELECT name , LOCATION FROM stadium WHERE YEAR = 2017 INTERSECT SELECT LOCATION FROM stadium WHERE YEAR = 2017
extra gold: SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015

eval_err_num:39
extra pred: SELECT T1.name , T2.location FROM stadium AS T1 JOIN stadium AS T2 ON T1.id = T2.stadium_id WHERE T1.year = 2015 INTERSECT SELECT T1.name , T2.location FROM stadium AS T1 JOIN game AS T2 ON T1.id = T2.stadium_id WHERE T1.year = 2011
extra gold: SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015

hard pred: SELECT count(*) FROM stadium ORDER BY capacity DESC LIMIT 1
hard gold: select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)

eval_err_num:40
hard pred: SELECT count(*) FROM stadium WHERE capacity = (SELECT game_id FROM stadium ORDER BY rental_rate DESC LIMIT 1
hard gold: select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)

eval_err_num:41
easy pred: SELECT count(*) FROM Student_Tests_Taken WHERE LENGTH = "2010-10-23"
easy gold: SELECT count(*) FROM pets WHERE weight  >  10

eval_err_num:42
easy pred: SELECT count(*) FROM furniture WHERE weight > 85
easy gold: SELECT count(*) FROM pets WHERE weight  >  10

eval_err_num:43
medium pred: SELECT Weight FROM people ORDER BY Height ASC LIMIT 1
medium gold: SELECT weight FROM pets ORDER BY pet_age LIMIT 1

eval_err_num:44
medium pred: SELECT sum(T2.total) FROM customers AS T1 JOIN laptimes AS T2 ON T1.id = T2.game_id ORDER BY T2.Age LIMIT 1
medium gold: SELECT weight FROM pets ORDER BY pet_age LIMIT 1

eval_err_num:45
medium pred: SELECT max(Milliseconds) , image_url FROM products
medium gold: SELECT max(weight) ,  petType FROM pets GROUP BY petType

eval_err_num:46
medium pred: SELECT Birth_Place , Weight FROM products
medium gold: SELECT max(weight) ,  petType FROM pets GROUP BY petType

eval_err_num:47
medium pred: SELECT count(*) FROM manufacturer WHERE age > 85
medium gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20

medium pred: SELECT count(*) FROM student WHERE age > 10
medium gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20

eval_err_num:48
hard pred: SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.student_id = T2.student_id WHERE T2.activity_name = 'F'
hard gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'

eval_err_num:49
hard pred: SELECT avg(T2.rating) FROM student AS T1 JOIN course AS T2 ON T1.stuid = T2.course_id WHERE T2.activity_name = "OTHA"
hard gold: SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'

eval_err_num:50
easy pred: SELECT count(DISTINCT acc_type) FROM vocals
easy gold: SELECT count(DISTINCT pettype) FROM pets

eval_err_num:51
easy pred: SELECT count(DISTINCT bedType) FROM products_for_hire
easy gold: SELECT count(DISTINCT pettype) FROM pets

eval_err_num:52
extra pred: SELECT T3.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE T2.enroll_grade = 'C' OR T2.enroll_grade = 'A'
extra gold: SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'

eval_err_num:53
extra pred: SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE T2.enroll_grade = 'A' OR T2.enroll_grade = 'A'
extra gold: SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'

eval_err_num:54
extra pred: SELECT T3.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE T2.enroll_grade = 'C' INTERSECT SELECT T1.stuid FROM STUDENT WHERE enroll_grade = "PIT"
extra gold: select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog'

eval_err_num:55
extra pred: SELECT T2.fname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.StuID = T2.StuID WHERE T2.first_name = "Monterey" INTERSECT SELECT T1.StuID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor WHERE T1.CName = 520
extra gold: SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'

eval_err_num:56
extra pred: SELECT StuID FROM Student WHERE Major NOT IN (SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = "food")
extra gold: SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')

eval_err_num:57
extra pred: SELECT T1.student_id , T1.name_last FROM Student_Course_Enrolment AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.family_name = 'yes'
extra gold: SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')

eval_err_num:58
hard pred: SELECT StuID FROM students WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance)
hard gold: SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

eval_err_num:59
hard pred: SELECT StuID FROM Student EXCEPT SELECT StuID FROM student_course_attendance WHERE family_name = 301
hard gold: SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'

eval_err_num:60
extra pred: SELECT fname , age FROM student WHERE StuID NOT IN (SELECT StuID FROM Has_allergy WHERE Allergy = "Soy")
extra gold: SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')

eval_err_num:61
extra pred: SELECT fname FROM student WHERE city_code = 'PHL' EXCEPT SELECT T1.emp_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE enroll_grade = 'C'
extra gold: SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')

eval_err_num:62
medium pred: SELECT TYPE , avg(weight) FROM people ORDER BY Height ASC LIMIT 1
medium gold: SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1

eval_err_num:63
medium pred: SELECT T1.name , T1.AllergyType FROM customer AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id = T2.game_id ORDER BY T2.duration DESC LIMIT 1
medium gold: SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1

eval_err_num:64
medium pred: SELECT user_name , sex FROM user_profiles WHERE followers > 85
medium gold: SELECT petid ,  weight FROM pets WHERE pet_age  >  1

eval_err_num:65
medium pred: SELECT avg(damage_millions_USD) , max(damage_millions_USD) FROM users WHERE age > 1000
medium gold: SELECT petid ,  weight FROM pets WHERE pet_age  >  1

eval_err_num:66
medium pred: SELECT avg(age) , min(age) , gender FROM Person GROUP BY gender
medium gold: SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype

medium pred: SELECT avg(age) , min(age) , city_code FROM student GROUP BY sex
medium gold: SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype

eval_err_num:67
medium pred: SELECT avg(weight) , avg(weight) FROM products GROUP BY payment_method_code
medium gold: SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype

eval_err_num:68
medium pred: SELECT avg(weight) , avg(product_price) FROM products GROUP BY product_type_code
medium gold: SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype

eval_err_num:69
medium pred: SELECT DISTINCT T1.fname , T1.age FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid WHERE stu_gpa = 'C'
medium gold: SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid

eval_err_num:70
medium pred: SELECT DISTINCT T1.Fname , Age FROM Student WHERE Major = 600
medium gold: SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid

eval_err_num:71
medium pred: SELECT rID FROM Students WHERE LName = 121
medium gold: SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'

eval_err_num:72
medium pred: SELECT rID FROM participants WHERE lname = "orange"
medium gold: SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'

eval_err_num:73
medium pred: SELECT T1.student_id , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id
medium gold: SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid

eval_err_num:74
medium pred: SELECT T2.student_id FROM Students AS T1 JOIN takes AS T2 ON T1.student_id = T2.class_code WHERE T2.activity_name = "advanced to the Wall"
medium gold: select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid

eval_err_num:75
medium pred: SELECT T2.emp_fname , T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num GROUP BY T2.stu_num HAVING count(*) > 1
medium gold: SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1

medium pred: SELECT fname , sex FROM student GROUP BY sex HAVING count(*) > 1
medium gold: SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1

hard pred: SELECT LName FROM student WHERE age = (SELECT min(age) FROM student)
hard gold: SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'

eval_err_num:76
hard pred: SELECT T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE T2.enroll_grade = 'A' AND T2.class_code = 10018
hard gold: SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'

eval_err_num:77
extra pred: SELECT avg(age) FROM student WHERE cust_id NOT IN (SELECT T1.StuID FROM loan)
extra gold: select avg(age) from student where stuid not in (select stuid from has_pet)

extra pred: SELECT avg(age) FROM student WHERE city_code != 'HKG'
extra gold: select avg(age) from student where stuid not in (select stuid from has_pet)

eval_err_num:78
easy pred: SELECT count(*) FROM papers
easy gold: SELECT count(*) FROM CONTINENTS;

eval_err_num:79
easy pred: SELECT count(*) FROM enzyme
easy gold: SELECT count(*) FROM CONTINENTS;

eval_err_num:80
medium pred: SELECT T1.Service_Type_Description , T1.file_size , count(*) FROM country AS T1 JOIN country AS T2 ON T1.country_id = T2.country_id GROUP BY T2.country_id
medium gold: SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;

eval_err_num:81
medium pred: SELECT T3.course_name , count(*) , country FROM constructors GROUP BY nationality
medium gold: SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;

eval_err_num:82
easy pred: SELECT count(*) FROM country
easy gold: SELECT count(*) FROM COUNTRIES;

eval_err_num:83
easy pred: SELECT count(*) FROM country
easy gold: SELECT count(*) FROM COUNTRIES;

eval_err_num:84
medium pred: SELECT card_id , stu_phone , count(*) FROM camera_lens AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model GROUP BY T1.id
medium gold: SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;

eval_err_num:85
medium pred: SELECT firstname , unit_of_measure FROM Rooms WHERE billing_country = "Banking"
medium gold: SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;

eval_err_num:86
hard pred: SELECT Model_name FROM chip_model ORDER BY RAM_MiB ASC LIMIT 1
hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;

eval_err_num:87
hard pred: SELECT T2.cell_mobile_number FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model WHERE T2.invoice_number = 102.76
hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;

eval_err_num:88
extra pred: SELECT model_name FROM chip_model WHERE weight < (SELECT avg(max_speed) FROM Aircraft)
extra gold: SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)

eval_err_num:89
extra pred: SELECT Model_name FROM people WHERE weight < (SELECT avg(height) FROM furniture_manufacte)
extra gold: SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)

eval_err_num:90
extra pred: SELECT title FROM vocals WHERE title = 'Statistics'
extra gold: SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';

eval_err_num:91
extra pred: SELECT DISTINCT T1.name FROM races AS T1 JOIN flight AS T2 ON T1.id = T2.genre_id WHERE T1.name = "Rock";
extra gold: SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';

eval_err_num:92
extra pred: SELECT min(T1.duration) , T3.Representative_Name FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id WHERE T2.event_details = "pop"
extra gold: SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);

eval_err_num:93
extra pred: SELECT title , Duration FROM course
extra gold: SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);

eval_err_num:94
hard pred: SELECT DISTINCT T2.Hardware_Model_name FROM chip_model AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.used_kb > 1880
hard gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;

eval_err_num:95
hard pred: SELECT DISTINCT chip_model FROM Customers_cards WHERE card_number > 3000
hard gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;

eval_err_num:96
hard pred: SELECT decor , count(*) FROM Financial_transactions GROUP BY label
hard gold: SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;

eval_err_num:97
hard pred: SELECT count(*) , T1.name FROM constructors AS T1 JOIN people AS T2 ON T1.team_id_loser = T2.team_id_br GROUP BY T1.name;
hard gold: SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;

eval_err_num:98
extra pred: SELECT country FROM stadium GROUP BY country ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;

eval_err_num:99
extra pred: SELECT country FROM airlines WHERE competition_type = 'Tournament' GROUP BY country ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;

eval_err_num:100
medium pred: SELECT count(*) , Company_name FROM Vehicles; GROUP BY Destroyed_by_Employee_ID
medium gold: select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;

eval_err_num:101
medium pred: SELECT card_id , customer_first_name FROM camera_lens GROUP BY constructorid
medium gold: SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;

eval_err_num:102
medium pred: SELECT title FROM Aircraft WHERE T2.customer_first_name = "LG-P760";
medium gold: SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';

eval_err_num:103
medium pred: SELECT count(*) FROM browser WHERE name = "Fast As a Shark";
medium gold: SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';

eval_err_num:104
medium pred: SELECT count(*) FROM team_franchise WHERE name = "Mountain Corporation";
medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';

eval_err_num:105
medium pred: SELECT count(*) FROM appointment WHERE outcome_code = 'King';
medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';

eval_err_num:106
hard pred: SELECT count(*) FROM chip_model AS T1 JOIN team AS T2 ON T1.team_id_loser = T2.team_id_br WHERE T2.name = 'Boston Red Stockings'
hard gold: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';

eval_err_num:107
hard pred: SELECT count(*) FROM MEDIATYPE WHERE wifi = 'No'
hard gold: SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';

eval_err_num:108
easy pred: SELECT AVG(Milliseconds) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id WHERE T1.first_name = 'LINDA'
easy gold: SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;

eval_err_num:109
easy pred: SELECT avg(RAM_MiB) FROM Customers_cards WHERE card_type_code = "Debit"
easy gold: SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;

eval_err_num:110
medium pred: SELECT AVG(Milliseconds) FROM body_builder AS T1 JOIN people AS T2 ON T1.Model_name = T2.id WHERE T2.Birth_Date = "Latin"
medium gold: select min(weight) from cars_data where cylinders  =  8 and year  =  1974

eval_err_num:111
medium pred: SELECT avg(T1.height) FROM body_builder AS T1 JOIN people AS T2 ON T1.Model_name = T2.id WHERE T2.Birth_Date = "Latin"
medium gold: select min(weight) from cars_data where cylinders  =  8 and year  =  1974

eval_err_num:112
medium pred: SELECT forename , Duration FROM Rooms
medium gold: SELECT Maker ,  Model FROM MODEL_LIST;

eval_err_num:113
medium pred: SELECT head_id , Appelation FROM Rooms
medium gold: SELECT Maker ,  Model FROM MODEL_LIST;

eval_err_num:114
medium pred: SELECT country , distance FROM branch WHERE membership_amount >= 20
medium gold: SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;

eval_err_num:115
medium pred: SELECT start_station_id , Country FROM Financial_transactions WHERE billing_country = "BK"
medium gold: SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;

eval_err_num:116
easy pred: SELECT count(*) FROM products WHERE title = "Fast Staff'
easy gold: SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;

eval_err_num:117
easy pred: SELECT count(*) FROM tracks WHERE id > 1000
easy gold: SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;

eval_err_num:118
medium pred: SELECT avg(weight) , avg(weight) FROM GENRE GROUP BY avg(weight)
medium gold: SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;

eval_err_num:119
medium pred: SELECT avg(weight) , min(weight) , YEAR FROM customer GROUP BY sex
medium gold: SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;

eval_err_num:120
extra pred: SELECT country FROM stadium WHERE competition_type = 'Friendly' GROUP BY country HAVING count(*) >= 3
extra gold: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;

eval_err_num:121
extra pred: SELECT name FROM swimmer GROUP BY nationality HAVING COUNT(*) >= 3
extra gold: SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;

eval_err_num:122
extra pred: SELECT T1.duration , min(T1.RAM_MiB) FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model WHERE T1.Type = "Pop"
extra gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;

eval_err_num:123
extra pred: SELECT Model_name , RAM_MiB FROM chip_model WHERE model_name = "4560596484842"
extra gold: SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;

eval_err_num:124
hard pred: SELECT Model_name FROM chip_model WHERE model_name = (SELECT chip_model FROM chip_model
hard gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;

eval_err_num:125
hard pred: SELECT chip_model FROM chip_model ORDER BY RAM_MiB DESC LIMIT 1
hard gold: select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;

eval_err_num:126
easy pred: SELECT avg(Speed) FROM products WHERE languages = "Fast Jose"
easy gold: SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;

eval_err_num:127
easy pred: SELECT AVG(Milliseconds) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id WHERE T2.genre_is = 'Marketing'
easy gold: select avg(horsepower) from cars_data where year  <  1980;

eval_err_num:128
medium pred: SELECT AVG(UnitPrice) FROM products WHERE name = "Fast As a Shark";
medium gold: SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';

eval_err_num:129
medium pred: SELECT AVG(UnitPrice) FROM products
medium gold: SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';

eval_err_num:130
medium pred: SELECT max(T1.length_meters) , COUNT(*) FROM Rooms GROUP BY Competition
medium gold: SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;

eval_err_num:131
medium pred: SELECT DISTINCT T1.file_size FROM products AS T1 JOIN Manufacturers AS T2 ON T1.f_id = T2.track_id
medium gold: SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;

eval_err_num:132
hard pred: SELECT Model_name FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model WHERE T2.Product_Name = 2002 GROUP BY T1.product_name ORDER BY count(*) DESC LIMIT 1
hard gold: SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;

eval_err_num:133
hard pred: SELECT chip_model FROM chip_model GROUP BY gtype ORDER BY count(*) DESC LIMIT 1
hard gold: SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;

eval_err_num:134
easy pred: SELECT count(*) FROM files WHERE duration > 4
easy gold: SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;

eval_err_num:135
easy pred: SELECT count(*) FROM files WHERE duration > 4
easy gold: SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;

eval_err_num:136
easy pred: SELECT count(*) FROM postseason WHERE Allergy = "Cancelled";
easy gold: SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;

eval_err_num:137
easy pred: SELECT count(*) FROM item WHERE title = "Fast Failure"
easy gold: SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;

eval_err_num:138
medium pred: SELECT count(*) FROM chip_model AS T1 JOIN team AS T2 ON T1.Model_name = T2.team_id_br WHERE T2.first_name = 'Boston Red Stockings'
medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';

eval_err_num:139
medium pred: SELECT count(*) FROM MEDIATYPE AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model WHERE T2.Company_name = "Nokia Corporation";
medium gold: SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';

eval_err_num:140
medium pred: SELECT product_details , roomName , T1.Hardware_colours FROM phone GROUP BY complaint_status_code HAVING count(*) > 3
medium gold: SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;

eval_err_num:141
medium pred: SELECT T1.Name , T1.driverid FROM user_profiles AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id GROUP BY T2.i_id HAVING count(*) > 3
medium gold: SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;

eval_err_num:142
extra pred: SELECT product_details FROM products WHERE product_details = "%Latte%" OR product_details > 5
extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;

eval_err_num:143
extra pred: SELECT DISTINCT T1.type FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model WHERE T2.Company_name = "Nokia Corporation";
extra gold: SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;

eval_err_num:144
easy pred: SELECT date FROM races WHERE YEAR NOT IN (SELECT Winning_Pilot FROM hosting_city GROUP BY YEAR HAVING count(*) > 8
easy gold: select distinct year from cars_data where weight between 3000 and 4000;

eval_err_num:145
easy pred: SELECT DISTINCT YEAR FROM weather WHERE YEAR > 220 INTERSECT SELECT DISTINCT YEAR FROM Albums WHERE YEAR > 1000
easy gold: select distinct year from cars_data where weight between 3000 and 4000;

eval_err_num:146
medium pred: SELECT avg(velocity) FROM aircraft ORDER BY altitude DESC LIMIT 1
medium gold: SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;

eval_err_num:147
medium pred: SELECT avg(velocity) FROM aircraft ORDER BY altitude DESC LIMIT 1
medium gold: SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;

eval_err_num:148
extra pred: SELECT count(*) FROM Vehicles WHERE wifi = "LG-P760";
extra gold: SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;

eval_err_num:149
extra pred: SELECT milliseconds FROM tracks WHERE T1.first_name = "Fast As a Shark";
extra gold: SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;

eval_err_num:150
hard pred: SELECT * FROM furniture WHERE complaint_type_code > (SELECT avg(product_price) FROM track)
hard gold: SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );

eval_err_num:151
hard pred: SELECT count(*) FROM products WHERE name = 'Cytosol' GROUP BY city ORDER BY count(*) DESC LIMIT 1
hard gold: SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );

eval_err_num:152
medium pred: SELECT count(*) FROM country WHERE country_id > 2
medium gold: select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2

eval_err_num:153
medium pred: SELECT country FROM airport WHERE competition_type = 'Friendly' GROUP BY country HAVING count(*) > 2
medium gold: select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2

eval_err_num:154
easy pred: SELECT count(*) FROM Reservations WHERE T1.CName > 8
easy gold: SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;

eval_err_num:155
easy pred: SELECT title FROM vocals WHERE title LIKE '%International%'
easy gold: SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;

eval_err_num:156
extra pred: SELECT f_id FROM chip_model ORDER BY RAM_MiB DESC LIMIT 1
extra gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;

eval_err_num:157
extra pred: SELECT problem_log_id FROM item GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 5;
extra gold: SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;

eval_err_num:158
extra pred: SELECT T1.name , T1.last_name , T1.fault_log_entry_datetime FROM game AS T1 JOIN MATCH AS T2 ON T1.department_id = T2.department_id GROUP BY T2.Winning_Aircraft HAVING count(*) > 3
extra gold: SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;

eval_err_num:159
extra pred: SELECT stu_fname , stu_lname FROM files WHERE duration < (SELECT avg(stu_gpa) FROM student)
extra gold: select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;

eval_err_num:160
medium pred: SELECT AVG(Milliseconds) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = "Latin" OR T1.Name < 5
medium gold: select max(mpg) from cars_data where cylinders  =  8 or year  <  1980

eval_err_num:161
medium pred: SELECT max(Milliseconds) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id WHERE T1.duration = "mp3" UNION SELECT song_name FROM song WHERE T1.duration < 1000
medium gold: select max(mpg) from cars_data where cylinders  =  8 or year  <  1980

eval_err_num:162
extra pred: SELECT Model_name FROM chip_model AS T1 JOIN TRACK AS T2 ON T1.product_id = T2.course_id WHERE T1.Type = "Graphics"
extra gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';

eval_err_num:163
extra pred: SELECT DISTINCT chip_model FROM phone WHERE product_details = "LG-P760";
extra gold: SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';

eval_err_num:164
hard pred: SELECT country FROM competition EXCEPT SELECT country FROM competition WHERE competition_type = 'Friendly'
hard gold: SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;

eval_err_num:165
hard pred: SELECT name FROM addresses WHERE country != 'Hartford'
hard gold: SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;

eval_err_num:166
extra pred: SELECT T1.name , T1.location FROM products AS T1 JOIN Manufacturers AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft HAVING count(*) >= 3
extra gold: select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;

eval_err_num:167
extra pred: SELECT T1.name , STOP FROM Vehicles AS T1 JOIN products AS T2 ON T1.zip_code = T2.zip_code GROUP BY T2.zip_code HAVING count(*) >= 3
extra gold: SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;

eval_err_num:168
extra pred: SELECT T1.name , T1.country FROM country AS T1 JOIN song AS T2 ON T1.id = T2.country_id GROUP BY T1.id HAVING COUNT(*) > 3 UNION SELECT name , id FROM circuits WHERE installation_date = "Defender"
extra gold: SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';

eval_err_num:169
extra pred: SELECT T1.WiFi , T1.country FROM country AS T1 JOIN invoices AS T2 ON T2.medicine_id = T1.id GROUP BY T1.id HAVING count(*) > 3 UNION SELECT name , id FROM circuits WHERE installation_date = 'activitor'
extra gold: select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';

eval_err_num:170
easy pred: SELECT country FROM customers WHERE title = "Demon Ernser"
easy gold: SELECT Country FROM AIRLINES WHERE Airline  =  "JetBlue Airways"

eval_err_num:171
easy pred: SELECT country FROM customers WHERE title = "sesame"
easy gold: SELECT Country FROM AIRLINES WHERE Airline  =  "JetBlue Airways"

eval_err_num:172
easy pred: SELECT product_category_description FROM products WHERE name = "Fast Kitty Rag"
easy gold: SELECT Abbreviation FROM AIRLINES WHERE Airline  =  "JetBlue Airways"

eval_err_num:173
easy pred: SELECT title FROM vocals WHERE name LIKE "%Latte%"
easy gold: SELECT Abbreviation FROM AIRLINES WHERE Airline  =  "JetBlue Airways"

eval_err_num:174
medium pred: SELECT vehicle_flight_number , name FROM airlines WHERE Airport_Name = "London Heathrow"
medium gold: SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  "USA"

eval_err_num:175
medium pred: SELECT T1.name , T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid JOIN airport AS T3 ON T1.alid = T3.alid WHERE T2.hours = "London Airlines'
medium gold: SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  "USA"

eval_err_num:176
medium pred: SELECT T1.name , STOP FROM airport AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid WHERE city = 'Canada'
medium gold: SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  "Anthony"

eval_err_num:177
medium pred: SELECT rid FROM airport WHERE first_name = "Roberto" AND last_name = 'Argentina'
medium gold: SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  "Anthony"

eval_err_num:178
easy pred: SELECT count(*) FROM country
easy gold: SELECT count(*) FROM AIRPORTS

eval_err_num:179
easy pred: SELECT count(*) FROM Customers
easy gold: SELECT count(*) FROM AIRPORTS

eval_err_num:180
easy pred: SELECT count(*) FROM Flight
easy gold: SELECT count(*) FROM FLIGHTS

eval_err_num:181
easy pred: SELECT count(*) FROM Flight
easy gold: SELECT count(*) FROM FLIGHTS

eval_err_num:182
easy pred: SELECT T1.name FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid WHERE T1.first_name = 'American Airlines'
easy gold: SELECT Airline FROM AIRLINES WHERE Abbreviation  =  "UAL"

eval_err_num:183
easy pred: SELECT T1.name FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid WHERE T1.first_name = 'American Airlines'
easy gold: SELECT Airline FROM AIRLINES WHERE Abbreviation  =  "UAL"

medium pred: SELECT city , country FROM airports WHERE city = 'United York'
medium gold: SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  "Alton"

eval_err_num:184
medium pred: SELECT city , country FROM addresses WHERE name LIKE "4%"
medium gold: SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  "Alton"

eval_err_num:185
easy pred: SELECT name FROM airports WHERE name = 'Goroka'
easy gold: SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  "AKO"

eval_err_num:186
easy pred: SELECT name FROM airports WHERE name = 'Cuba'
easy gold: SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  "AKO"

eval_err_num:187
easy pred: SELECT route_name FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid = T2.apid WHERE T1.name = 'Italy'
easy gold: SELECT AirportName FROM AIRPORTS WHERE City = "Aberdeen"

eval_err_num:188
easy pred: SELECT region_name FROM airports WHERE country = 'Goroka'
easy gold: SELECT AirportName FROM AIRPORTS WHERE City = "Aberdeen"

eval_err_num:189
easy pred: SELECT flno FROM Flight WHERE origin = "Los Angeles"
easy gold: SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  "APG"

eval_err_num:190
easy pred: SELECT count(*) FROM Flight WHERE origin = "Mountain Angeles"
easy gold: SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  "APG"

eval_err_num:191
easy pred: SELECT count(*) FROM Flight WHERE origin = "Los Angeles"
easy gold: SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  "ATO"

eval_err_num:192
easy pred: SELECT count(*) FROM Flight WHERE origin = "Los Angeles"
easy gold: SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  "ATO"

eval_err_num:193
medium pred: SELECT flno FROM Flight WHERE origin = "Los Angeles"
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

eval_err_num:194
medium pred: SELECT flno FROM Flight WHERE origin = "Airbus Angeles"
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

eval_err_num:195
medium pred: SELECT count(*) FROM Flight WHERE origin = "Mountain Angeles"
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

eval_err_num:196
medium pred: SELECT flno FROM Flight WHERE origin = "Airbus Angeles"
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

eval_err_num:197
hard pred: SELECT flno FROM Flight WHERE origin = "Los Angeles" AND destination = "Honolulu"
hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"

eval_err_num:198
hard pred: SELECT count(*) FROM Flight WHERE origin = "Los Angeles"
hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  "Ashley" AND T3.City  =  "Aberdeen"

eval_err_num:199
medium pred: SELECT count(*) FROM flight AS T1 JOIN flight AS T2 ON T1.id = T2.airport_id WHERE T1.name = 'American Airlines'
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"

eval_err_num:200
medium pred: SELECT title FROM Ref_colors WHERE name = "Fast Kitty City'
medium gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = "JetBlue Airways"

eval_err_num:201
medium pred: SELECT count(*) FROM Residents WHERE name = "Los Angeles"
medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.DestAirport  =  "ASY"

eval_err_num:202
medium pred: SELECT count(*) FROM flight AS T1 JOIN flight AS T2 ON T1.id = T2.airport_id WHERE country = 'Canada'
medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.DestAirport  =  "ASY"

eval_err_num:203
medium pred: SELECT count(*) FROM Residents WHERE origin = "Los Angeles"
medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD"

eval_err_num:204
medium pred: SELECT flno FROM Flight WHERE origin = "Los Angeles"
medium gold: SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  "United Airlines" AND T2.SourceAirport  =  "AHD"

eval_err_num:205
hard pred: SELECT count(*) FROM airport WHERE origin = "Mountain Angeles"
hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"

eval_err_num:206
hard pred: SELECT count(*) FROM flight AS T1 JOIN flight AS T2 ON T1.id = T2.airport_id WHERE country = 'Canada'
hard gold: SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  "Aberdeen" AND T3.Airline  =  "United Airlines"

extra pred: SELECT city FROM airports GROUP BY city ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1

eval_err_num:207
extra pred: SELECT T2.dst_apid FROM Tourist_Attractions AS T1 JOIN airports AS T2 ON T1.dst_apid = T2.city_id GROUP BY T1.city_id ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1

extra pred: SELECT city FROM airports GROUP BY city ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1

eval_err_num:208
extra pred: SELECT t3.city FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid GROUP BY T2.dst_apid ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1

eval_err_num:209
extra pred: SELECT destination FROM airport GROUP BY destination ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1

eval_err_num:210
extra pred: SELECT name FROM airports WHERE destination = 'Goroka' GROUP BY country ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1

eval_err_num:211
extra pred: SELECT destination FROM Flight GROUP BY destination ORDER BY count(*) LIMIT 1
extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1

eval_err_num:212
extra pred: SELECT flno FROM airport ORDER BY elevation ASC LIMIT 1
extra gold: SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1

eval_err_num:213
extra pred: SELECT T1.name FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1

eval_err_num:214
extra pred: SELECT origin FROM Flight GROUP BY origin ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1

eval_err_num:215
extra pred: SELECT country , country FROM Flight GROUP BY country ORDER BY count(*) ASC LIMIT 1
extra gold: SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1

eval_err_num:216
extra pred: SELECT crs_credit , Country FROM Flight GROUP BY Country ORDER BY count(*) ASC LIMIT 1
extra gold: SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1

eval_err_num:217
medium pred: SELECT T1.flno FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid WHERE T1.name = 'American Airlines'
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "AHD"

eval_err_num:218
medium pred: SELECT T2.name FROM Flight AS T1 JOIN flight AS T2 ON T1.company_id = T2.company_id WHERE T1.name = 'China'
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "AHD"

eval_err_num:219
medium pred: SELECT flno FROM Flight WHERE origin = "Los Angeles"
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  "AHD"

eval_err_num:220
medium pred: SELECT T2.name FROM Flight AS T1 JOIN airports AS T2 ON T1.dst_apid = T2.apid WHERE T1.name = "Airbus Airlines'
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  "AHD"

eval_err_num:221
extra pred: SELECT T1.name FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid WHERE T1.name = 'American Airlines'
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO"

eval_err_num:222
extra pred: SELECT T1.name FROM airlines AS T1 JOIN flight AS T2 ON T1.id = T2.airport_id WHERE T1.firstname = "Dameon" AND T1.name = 'American Airport'
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO"

eval_err_num:223
extra pred: SELECT sum(Domestic_Passengers) FROM routes WHERE dst_apid = "Banking" EXCEPT SELECT T1.name FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid WHERE T1.name = 'American Airlines'
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"

eval_err_num:224
extra pred: SELECT T1.name FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid WHERE T1.name = "Dameon" AND T1.name != Airport'
extra gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "CVO" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  "APG"

eval_err_num:225
medium pred: SELECT T2.name FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T1.name HAVING count(*) >= 10
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10

eval_err_num:226
medium pred: SELECT T2.name FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T1.name HAVING count(*) >= 10
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10

eval_err_num:227
medium pred: SELECT T1.name FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid WHERE T2.bikes_available < 10
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200

eval_err_num:228
medium pred: SELECT name FROM airlines WHERE distance < 200
medium gold: SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200

eval_err_num:229
medium pred: SELECT T1.flno FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.id = T2.driverid WHERE T1.duration = "Demon Harris"
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  "United Airlines"

eval_err_num:230
medium pred: SELECT flno FROM Flight WHERE origin = "Los Angeles"
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  "United Airlines"

eval_err_num:231
easy pred: SELECT T1.flno FROM Flight AS T1 JOIN Flight AS T2 ON T1.aid = T2.aid WHERE origin = "Los A340-300"
easy gold: SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  "APG"

eval_err_num:232
easy pred: SELECT flno FROM Flight WHERE origin = "Los Angeles"
easy gold: SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  "APG"

eval_err_num:233
easy pred: SELECT flno FROM Flight WHERE origin = "Los Angeles"
easy gold: SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  "APG"

eval_err_num:234
easy pred: SELECT flno FROM Flight WHERE origin = "Los Angeles"
easy gold: SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  "APG"

eval_err_num:235
medium pred: SELECT flno FROM Flight WHERE origin = "Los Angeles"
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

eval_err_num:236
medium pred: SELECT flno FROM Flight WHERE origin = "Los Angeles"
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

eval_err_num:237
medium pred: SELECT flno FROM Flight WHERE origin = "Los Angeles"
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

eval_err_num:238
medium pred: SELECT T1.flno FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid WHERE T2.document_name = "Airbus A340-300"
medium gold: SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  "Aberdeen"

eval_err_num:239
hard pred: SELECT count(*) FROM Flight WHERE city = "Los Angeles" OR origin = "Los Angeles"
hard gold: SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene"

eval_err_num:240
hard pred: SELECT count(*) FROM Flight WHERE origin = "Los Angeles" OR origin = "Los Angeles"
hard gold: SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  "Aberdeen" OR T2.city  =  "Abilene"

eval_err_num:241
hard pred: SELECT name FROM airports EXCEPT SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid WHERE T1.name = 'China'
hard gold: SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)

eval_err_num:242
hard pred: SELECT name FROM airports EXCEPT SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid WHERE T1.name = 'American TO Stockings' OR country = 'Canada'
hard gold: SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)

eval_err_num:243
easy pred: SELECT count(*) FROM Staff;
easy gold: SELECT count(*) FROM employee

eval_err_num:244
easy pred: SELECT count(*) FROM Staff;
easy gold: SELECT count(*) FROM employee

eval_err_num:245
easy pred: SELECT name FROM employees ORDER BY age
easy gold: SELECT name FROM employee ORDER BY age

eval_err_num:246
easy pred: SELECT Name FROM Employees ORDER BY Age ASC
easy gold: SELECT name FROM employee ORDER BY age

eval_err_num:247
medium pred: SELECT gender , count(*) FROM employees GROUP BY gender
medium gold: SELECT count(*) ,  city FROM employee GROUP BY city

eval_err_num:248
medium pred: SELECT rank , count(*) FROM employees GROUP BY department_id
medium gold: SELECT count(*) ,  city FROM employee GROUP BY city

eval_err_num:249
medium pred: SELECT city FROM Addresses WHERE age < 40 GROUP BY city HAVING count(*) > 1
medium gold: SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1

eval_err_num:250
medium pred: SELECT city FROM employees WHERE age < 40 GROUP BY city HAVING count(*) > 1
medium gold: SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1

eval_err_num:251
medium pred: SELECT t3.headquartered_city , count(*) FROM store AS t1 JOIN furniture_manufacte AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city
medium gold: SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION

eval_err_num:252
medium pred: SELECT t3.headquartered_city , count(*) FROM store AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID
medium gold: SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION

eval_err_num:253
medium pred: SELECT shop_id , City_Population FROM shop WHERE store_id = (SELECT avg(score) FROM shop)
medium gold: SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1

eval_err_num:254
medium pred: SELECT Shop_Name , City_Population FROM shop ORDER BY Open_Year DESC LIMIT 1
medium gold: SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1

eval_err_num:255
medium pred: SELECT max(Cows) , max(product_price) , t1.typical_selling_price FROM catalog_contents
medium gold: SELECT min(Number_products) ,  max(Number_products) FROM shop

eval_err_num:256
medium pred: SELECT Low_Estimate , max(product_price) FROM manufacturer
medium gold: SELECT min(Number_products) ,  max(Number_products) FROM shop

eval_err_num:257
medium pred: SELECT name , LOCATION , floors FROM shop ORDER BY Shop_Name DESC
medium gold: SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC

eval_err_num:258
medium pred: SELECT shop_id , LOCATION , floors FROM manufacturer ORDER BY Open_Year DESC
medium gold: SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC

eval_err_num:259
hard pred: SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id WHERE t3.store_name > (SELECT t1.store_name FROM District"
hard gold: SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)

eval_err_num:260
hard pred: SELECT Shop_Name FROM shop WHERE rental_date > (SELECT avg(score) FROM products)
hard gold: SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)

eval_err_num:261
extra pred: SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1

eval_err_num:262
extra pred: SELECT Employees.employee_name FROM employees WHERE first_name = "Nancy" AND last_name = "Edwards";
extra gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1

eval_err_num:263
hard pred: SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1
hard gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1

eval_err_num:264
hard pred: SELECT T1.first_name FROM employees AS T1 JOIN employees AS T2 ON T1.reports_to = T2.id ORDER BY T2.rental_date DESC LIMIT 1
hard gold: SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1

eval_err_num:265
hard pred: SELECT name FROM Employee WHERE engineer_id NOT IN (SELECT engineer_id FROM Engineer_Visits)
hard gold: SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)

eval_err_num:266
hard pred: SELECT name FROM Employee WHERE id NOT IN (SELECT engineer_id FROM Employee)
hard gold: SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)

eval_err_num:267
extra pred: SELECT Shop_Name FROM shop GROUP BY store_id ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:268
extra pred: SELECT t3.headquartered_city FROM shop AS t1 JOIN shop AS t2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:269
hard pred: SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM stock)
hard gold: SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)

eval_err_num:270
hard pred: SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM Office_locations)
hard gold: SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)

eval_err_num:271
medium pred: SELECT T3.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID WHERE store_id = 1 GROUP BY T1.Shop_ID
medium gold: SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name

eval_err_num:272
medium pred: SELECT T1.name , count(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id GROUP BY T2.department_name
medium gold: SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name

eval_err_num:273
easy pred: SELECT title FROM item
easy gold: SELECT sum(bonus) FROM evaluation

eval_err_num:274
easy pred: SELECT max(OMIM) FROM item
easy gold: SELECT sum(bonus) FROM evaluation

eval_err_num:275
easy pred: SELECT * FROM tweets
easy gold: SELECT * FROM hiring

eval_err_num:276
easy pred: SELECT * FROM tweets
easy gold: SELECT * FROM hiring

eval_err_num:277
hard pred: SELECT District_name FROM district WHERE city_area < 2012 INTERSECT SELECT district FROM store WHERE city_population > 50000
hard gold: SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000

eval_err_num:278
hard pred: SELECT District_name FROM shop WHERE Open_Year < 2012 INTERSECT SELECT district FROM shop WHERE Open_Year > 50000
hard gold: SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000

eval_err_num:279
easy pred: SELECT count(DISTINCT roomtype) FROM store
easy gold: SELECT count(DISTINCT LOCATION) FROM shop

eval_err_num:280
easy pred: SELECT count(DISTINCT bedType) FROM store
easy gold: SELECT count(DISTINCT LOCATION) FROM shop

eval_err_num:281
easy pred: SELECT count(*) FROM Documents_with_expenses
easy gold: SELECT count(*) FROM Documents

eval_err_num:282
medium pred: SELECT account_id , date_account_opened , document_description FROM Documents
medium gold: SELECT document_id ,  document_name ,  document_description FROM Documents

eval_err_num:283
medium pred: SELECT T1.document_id , T2.document_name FROM Ref_document_types AS T1 JOIN Ref_document_types AS T2 ON T1.document_type_code = T2.document_type_code WHERE T1.document_name LIKE '%s%'
medium gold: SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE "%w%"

medium pred: SELECT document_name , document_name FROM Documents WHERE document_name LIKE "%CV%"
medium gold: SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE "%w%"

eval_err_num:284
medium pred: SELECT document_id , genre_is , document_description FROM Documents WHERE document_name = 'Noel CV'
medium gold: SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  "Robbin CV"

eval_err_num:285
medium pred: SELECT document_id , genre_is , document_description FROM Documents WHERE document_name = 'Noel CV'
medium gold: SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  "Robbin CV"

eval_err_num:286
easy pred: SELECT count(DISTINCT SOURCE) FROM Ref_Document_Status;
easy gold: SELECT count(DISTINCT template_id) FROM Documents

eval_err_num:287
easy pred: SELECT count(DISTINCT label) FROM Documents
easy gold: SELECT count(DISTINCT template_id) FROM Documents

eval_err_num:288
medium pred: SELECT count(*) FROM Documents WHERE document_type_code = "done";
medium gold: SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'

eval_err_num:289
medium pred: SELECT count(*) FROM Documents AS T1 JOIN Ref_document_types AS T2 ON T1.document_id = T2.document_id WHERE T1.document_name = "King to read a book"
medium gold: SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'

eval_err_num:290
medium pred: SELECT invoice_number , count(*) FROM Documents GROUP BY product_category
medium gold: SELECT template_id ,  count(*) FROM Documents GROUP BY template_id

eval_err_num:291
medium pred: SELECT product_category , count(*) FROM Player_Attributes GROUP BY semester , t1.other_characteristic_details
medium gold: SELECT template_id ,  count(*) FROM Documents GROUP BY template_id

eval_err_num:292
extra pred: SELECT T1.incident_type_code , T2.incident_type_description FROM files AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:293
extra pred: SELECT T1.document_type_name , T2.budget_type_description FROM files AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.order_id = T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:294
easy pred: SELECT f_id FROM documents GROUP BY formats HAVING count(*) > 1
easy gold: SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1

eval_err_num:295
easy pred: SELECT f_id FROM TRACK GROUP BY date_of_latest_revision HAVING count(*) > 1
easy gold: SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1

eval_err_num:296
hard pred: SELECT vehicle_id FROM Vehicles; EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_with_expenses
hard gold: SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents

eval_err_num:297
hard pred: SELECT vehicle_id FROM ARTIST EXCEPT SELECT rID FROM Documents_with_expenses
hard gold: SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents

eval_err_num:298
easy pred: SELECT count(*) FROM papers
easy gold: SELECT count(*) FROM Templates

eval_err_num:299
easy pred: SELECT count(*) FROM papers
easy gold: SELECT count(*) FROM Templates

eval_err_num:300
medium pred: SELECT min(Order_Quantity) , T1.file_size , Participant_Details FROM Ref_document_types
medium gold: SELECT template_id ,  version_number ,  template_type_code FROM Templates

eval_err_num:301
medium pred: SELECT card_id , T1.forename , mean_humidity FROM enzyme
medium gold: SELECT template_id ,  version_number ,  template_type_code FROM Templates

eval_err_num:302
easy pred: SELECT DISTINCT document_type_code FROM teachers
easy gold: SELECT DISTINCT template_type_code FROM Templates

eval_err_num:303
easy pred: SELECT DISTINCT form_type_code FROM race
easy gold: SELECT DISTINCT template_type_code FROM Templates

eval_err_num:304
medium pred: SELECT f_id FROM ref_product_categories WHERE product_category_code = "Green"
medium gold: SELECT template_id FROM Templates WHERE template_type_code  =  "PP" OR template_type_code  =  "PPT"

eval_err_num:305
medium pred: SELECT f_id FROM Documents WHERE product_category_code = "Spices" OR document_type_code = "Kohler"
medium gold: SELECT template_id FROM Templates WHERE template_type_code  =  "PP" OR template_type_code  =  "PPT"

eval_err_num:306
easy pred: SELECT count(*) FROM vocals WHERE participant_type_code = "flax"
easy gold: SELECT count(*) FROM Templates WHERE template_type_code  =  "CV"

eval_err_num:307
easy pred: SELECT count(*) FROM vocals WHERE TYPE = "lead"
easy gold: SELECT count(*) FROM Templates WHERE template_type_code  =  "CV"

eval_err_num:308
medium pred: SELECT crs_credit FROM products WHERE product_details > 8
medium gold: SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5

eval_err_num:309
medium pred: SELECT Num_of_Component FROM Rooms WHERE incident_type_code > 1000
medium gold: SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5

eval_err_num:310
medium pred: SELECT TYPE , count(*) FROM Products GROUP BY Product_Type_Code
medium gold: SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code

eval_err_num:311
medium pred: SELECT allergytype , count(*) FROM medicine_enzyme_interaction GROUP BY allergytype
medium gold: SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code

eval_err_num:312
hard pred: SELECT policy_type_code FROM vocals GROUP BY zip_code ORDER BY count(*) DESC LIMIT 1
hard gold: SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1

eval_err_num:313
hard pred: SELECT TYPE FROM vocals GROUP BY customer_type_code ORDER BY count(*) DESC LIMIT 1
hard gold: SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1

eval_err_num:314
easy pred: SELECT TYPE FROM Products GROUP BY gtype HAVING count(*) < 3
easy gold: SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3

eval_err_num:315
easy pred: SELECT TYPE FROM vocals GROUP BY TYPE HAVING count(*) < 3
easy gold: SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3

eval_err_num:316
medium pred: SELECT max(Milliseconds) , date_incident_end FROM furniture WHERE crs_code = "enrico09@example.com"
medium gold: SELECT min(Version_Number) ,  template_type_code FROM Templates

eval_err_num:317
medium pred: SELECT T1.incident_type_code , t1.other_characteristic_details , t1.characteristic_data_type FROM CHARACTERISTICS AS T1 JOIN people AS T2 ON T1.medicine_id = T2.id
medium gold: SELECT min(Version_Number) ,  template_type_code FROM Templates

eval_err_num:318
medium pred: SELECT incident_type_description FROM All_documents WHERE document_type_code = 'Iron CV"
medium gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  "Data base"

eval_err_num:319
medium pred: SELECT max(t2.active_to_date) FROM All_documents AS T1 JOIN Ref_document_types AS T2 ON T1.document_type_code = T2.document_type_code WHERE T1.document_name = "How to read a book"
medium gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  "Data base"

medium pred: SELECT document_name FROM documents WHERE document_name LIKE "%CV%"
medium gold: SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  "BK"

medium pred: SELECT document_name FROM documents WHERE document_name = "David CV"
medium gold: SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  "BK"

eval_err_num:320
medium pred: SELECT TYPE , count(*) FROM Documents GROUP BY TYPE
medium gold: SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code

eval_err_num:321
medium pred: SELECT TYPE , count(*) FROM Documents GROUP BY allergytype
medium gold: SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code

eval_err_num:322
extra pred: SELECT policy_type_code FROM Ref_Incident_Type GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1

eval_err_num:323
extra pred: SELECT product_type_code FROM products GROUP BY product_type_code ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1

eval_err_num:324
hard pred: SELECT product_type_code FROM Products EXCEPT SELECT T1.product_name FROM Products AS T1 JOIN Order_items AS T2 ON T1.card_id = T2.Product_ID
hard gold: SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id

eval_err_num:325
hard pred: SELECT TYPE FROM enzyme WHERE TYPE != 'Heme'
hard gold: SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id

eval_err_num:326
medium pred: SELECT TYPE , Product_Type_Code FROM Products
medium gold: SELECT template_type_code ,  template_type_description FROM Ref_template_types

eval_err_num:327
medium pred: SELECT premises_type , budget_type_description FROM premises
medium gold: SELECT template_type_code ,  template_type_description FROM Ref_template_types

eval_err_num:328
easy pred: SELECT product_category_description FROM ref_product_categories WHERE product_category_code = "Herbs"
easy gold: SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  "AD"

eval_err_num:329
easy pred: SELECT product_category_description FROM ref_product_categories WHERE product_category_code = "Herbs"
easy gold: SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  "AD"

eval_err_num:330
easy pred: SELECT product_category_description FROM Ref_Document_Types WHERE document_description = "Herbs"
easy gold: SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  "Book"

eval_err_num:331
easy pred: SELECT Product_Type_Code FROM vocals WHERE document_description = "VIOLENCE"
easy gold: SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  "Book"

eval_err_num:332
medium pred: SELECT DISTINCT form_type_code FROM enzyme WHERE Device_ID LIKE "%Latte%"
medium gold: SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID

eval_err_num:333
medium pred: SELECT course_description FROM catalog_contents WHERE product_stock_number LIKE "2%"
medium gold: SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID

eval_err_num:334
medium pred: SELECT product_category_description FROM ref_product_categories WHERE T2.product_description = "LG-P760";
medium gold: SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  "Presentation"

eval_err_num:335
medium pred: SELECT product_category_description FROM products WHERE product_details = "Chocolate"
medium gold: SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  "Presentation"

eval_err_num:336
easy pred: SELECT count(*) FROM papers
easy gold: SELECT count(*) FROM Paragraphs

eval_err_num:337
easy pred: SELECT count(*) FROM papers
easy gold: SELECT count(*) FROM Paragraphs

eval_err_num:338
medium pred: SELECT count(*) FROM All_documents WHERE T1.document_name LIKE "done";
medium gold: SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'

eval_err_num:339
medium pred: SELECT count(*) FROM All_documents AS T1 JOIN Ref_document_types AS T2 ON T1.document_id = T2.document_id WHERE T1.document_name = "King to read a book"
medium gold: SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'

eval_err_num:340
medium pred: SELECT * FROM ref_colors WHERE product_details LIKE "%Latte%"
medium gold: select other_details from paragraphs where paragraph_text like 'korea'

eval_err_num:341
medium pred: SELECT title FROM tweets WHERE text LIKE '%intern%'
medium gold: select other_details from paragraphs where paragraph_text like 'korea'

eval_err_num:342
medium pred: SELECT T1.lesson_id , T2.document_name FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = "LG-P760";
medium gold: SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'

medium pred: SELECT document_id FROM documents WHERE document_name = "David CV"
medium gold: SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'

eval_err_num:343
medium pred: SELECT * FROM documents WHERE T2.document_name = "David CV"
medium gold: SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  "Customer reviews"

eval_err_num:344
medium pred: SELECT t2.section_title FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code = t2.document_code JOIN functional_areas AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t1.product_name = "sesame"
medium gold: SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  "Customer reviews"

eval_err_num:345
medium pred: SELECT document_id , count(*) FROM Documents_to_be_destroyed GROUP BY document_type_code ORDER BY count(*)
medium gold: SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id

eval_err_num:346
medium pred: SELECT document_id , count(*) FROM Documents_to_be_destroyed GROUP BY document_type_code ORDER BY count(*)
medium gold: SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id

eval_err_num:347
medium pred: SELECT document_type_code , count(*) FROM Documents_to_be_destroyed GROUP BY document_type_code
medium gold: SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id

eval_err_num:348
medium pred: SELECT count(*) , nationality FROM constructors GROUP BY document_id;
medium gold: SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id

easy pred: SELECT document_id FROM Documents GROUP BY document_id HAVING count(*) >= 2
easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2

easy pred: SELECT document_id FROM Documents GROUP BY document_id HAVING count(*) >= 2
easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2

eval_err_num:349
extra pred: SELECT document_id , name FROM Documents GROUP BY document_id ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:350
extra pred: SELECT document_id , document_name FROM Documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1

hard pred: SELECT document_id FROM Documents WHERE document_id = 'SF'
hard gold: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1

eval_err_num:351
hard pred: SELECT document_id FROM Documents GROUP BY document_type_code ORDER BY count(*) ASC LIMIT 1
hard gold: SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1

eval_err_num:352
easy pred: SELECT document_id FROM files GROUP BY document_type_code HAVING count(*) = 2
easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2

eval_err_num:353
easy pred: SELECT document_id FROM Documents GROUP BY document_type_code HAVING count(*) BETWEEN 2 AND Documents_with_expenses
easy gold: SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2

eval_err_num:354
hard pred: SELECT document_id FROM Documents WHERE T1.document_name = "done" AND document_type_code = "Paper";
hard gold: SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'

eval_err_num:355
hard pred: SELECT T1.document_id FROM Documents AS T1 JOIN ARTIST AS T2 ON T1.document_id = T2.document_id WHERE T1.document_name LIKE '%s%'
hard gold: SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'

eval_err_num:356
easy pred: SELECT count(*) FROM list
easy gold: SELECT count(*) FROM teacher

eval_err_num:357
easy pred: SELECT count(*) FROM Tasks
easy gold: SELECT count(*) FROM teacher

eval_err_num:358
easy pred: SELECT Name FROM Teachers ORDER BY Age ASC
easy gold: SELECT Name FROM teacher ORDER BY Age ASC

eval_err_num:359
easy pred: SELECT Name FROM Teachers ORDER BY Age ASC
easy gold: SELECT Name FROM teacher ORDER BY Age ASC

eval_err_num:360
medium pred: SELECT max(Age) , Age FROM Guests
medium gold: SELECT Age ,  Hometown FROM teacher

eval_err_num:361
medium pred: SELECT T1.age , guest_last_name FROM people WHERE death_year = "German"
medium gold: SELECT Age ,  Hometown FROM teacher

eval_err_num:362
easy pred: SELECT title FROM Teachers WHERE name != 'Alice' AND last_name != last_name
easy gold: select name from teacher where hometown != "little lever urban district"

eval_err_num:363
easy pred: SELECT title FROM Teachers WHERE friend != '%man%'
easy gold: select name from teacher where hometown != "little lever urban district"

eval_err_num:364
medium pred: SELECT Name FROM Teachers WHERE role_code = "HR" OR date_from = "Temple"
medium gold: SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33

eval_err_num:365
medium pred: SELECT Name FROM teachers WHERE Age = 1 OR Age = 109
medium gold: SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33

eval_err_num:366
medium pred: SELECT T1.Total_Points FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID ORDER BY T2.Age LIMIT 1
medium gold: SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1

eval_err_num:367
medium pred: SELECT address FROM TEACHERS WHERE job = 'student'
medium gold: SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1

eval_err_num:368
medium pred: SELECT T2.Hometown , COUNT(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom GROUP BY T2.firstname
medium gold: SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown

eval_err_num:369
medium pred: SELECT count(*) , role_code FROM list GROUP BY role_code
medium gold: SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown

eval_err_num:370
hard pred: SELECT T2.Hometown FROM people AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.game_id GROUP BY T2.Host_city_ID ORDER BY COUNT(*) DESC LIMIT 1
hard gold: SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1

eval_err_num:371
hard pred: SELECT Description FROM trip GROUP BY start_station_name ORDER BY COUNT(*) DESC LIMIT 1
hard gold: SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1

eval_err_num:372
easy pred: SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown HAVING COUNT(*) >= 2
easy gold: SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2

eval_err_num:373
easy pred: SELECT T1.Service_Type_Description FROM Reservations AS T1 JOIN Teachers AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room HAVING count(*) >= 2
easy gold: SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2

eval_err_num:374
medium pred: SELECT T1.name , T3.prof_high_degree FROM Course_Authors_and_Tutors AS T1 JOIN Teachers AS T2 ON T1.teacher_id = T2.teacher_id WHERE T2.subject_name = "film"
medium gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID

eval_err_num:375
medium pred: SELECT T1.name , T1.stu_lname , T4.crs_description FROM ENROLLED_IN AS T1 JOIN Teachers AS T2 ON T1.name = T2.friend WHERE T1.CName = "AFTER"
medium gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID

eval_err_num:376
hard pred: SELECT course_name FROM on_call WHERE T2.course_name = "Florida" ORDER BY basePrice;
hard gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name

eval_err_num:377
hard pred: SELECT name FROM Course_Authors_and_Tutors ORDER BY personal_name
hard gold: SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name

eval_err_num:378
hard pred: SELECT T2.firstname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T2.firstname = "OTHA" AND T2.lastname = "Medhurst"
hard gold: SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  "Math"

eval_err_num:379
hard pred: SELECT DISTINCT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T2.firstname = 'Alice' AND T2.lastname = 'female'
hard gold: SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  "Math"

eval_err_num:380
medium pred: SELECT T1.name , COUNT(*) FROM nurse AS T1 JOIN on_call AS T2 ON T1.EmployeeID = T2.nurse GROUP BY T1.teacher_id
medium gold: SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name

eval_err_num:381
medium pred: SELECT count(*) , T1.name FROM department AS T1 JOIN on_call AS T2 ON T1.EmployeeID = T2.nurse GROUP BY T1.teacher_id
medium gold: SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name

eval_err_num:382
medium pred: SELECT How_to_Get_There FROM teachers GROUP BY emp_jobcode HAVING count(*) >= 2
medium gold: SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2

eval_err_num:383
medium pred: SELECT T2.roomName FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom GROUP BY T2.firstname HAVING count(*) >= 2
medium gold: SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2

eval_err_num:384
hard pred: SELECT name FROM Teachers EXCEPT SELECT T1.name FROM Lessons AS T1 JOIN Teachers AS T2 ON T1.teacher_id = T2.teacher_id
hard gold: SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)

eval_err_num:385
hard pred: SELECT customer_name FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)
hard gold: SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)

eval_err_num:386
easy pred: SELECT count(*) FROM Person WHERE age < 40
easy gold: SELECT count(*) FROM visitor WHERE age  <  30

eval_err_num:387
medium pred: SELECT T1.interaction_type FROM body_builder AS T1 JOIN constructorstandings AS T2 ON T1.bandmate = T2.id WHERE stageposition > 140 ORDER BY T1.title
medium gold: SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC

eval_err_num:388
easy pred: SELECT count(*) FROM All_documents WHERE address != 'Hartford'
easy gold: SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4

eval_err_num:389
medium pred: SELECT T1.theme , T2.party_name FROM member AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID WHERE T2.Rank_in_Round > 6000
medium gold: SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC

eval_err_num:390
medium pred: SELECT T1.staff_id , T1.staff_name FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id GROUP BY T2.staff_id ORDER BY count(*) DESC LIMIT 1
medium gold: SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1

eval_err_num:391
easy pred: SELECT avg(price) FROM Project_Staff WHERE billing_city = "Janessa" AND YEAR < 2005
easy gold: SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009

eval_err_num:392
medium pred: SELECT year_opened FROM Products_for_hire WHERE origin = "Janessa" AND last_name = "Sawayn";
medium gold: SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'

eval_err_num:393
hard pred: SELECT date FROM staff WHERE hours > 700
hard gold: SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)

eval_err_num:394
medium pred: SELECT id , age , age FROM races WHERE dorm_name > 85
medium gold: SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1

eval_err_num:395
extra pred: SELECT T1.name , T1.other_account_details , T1.organisation_details FROM accounts AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid GROUP BY T1.statement_id ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1

eval_err_num:396
extra pred: SELECT head_id , name FROM Staff GROUP BY name ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1

eval_err_num:397
hard pred: SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM prereq)
hard gold: SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)

eval_err_num:398
hard pred: SELECT T1.name , T1.age FROM customers AS T1 JOIN train AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T2.dormid ORDER BY count(*) DESC LIMIT 1
hard gold: SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1

eval_err_num:399
medium pred: SELECT avg(price_in_euros) , avg(basePrice) FROM Invoices WHERE bedtype = "MasterCard"
medium gold: SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit

eval_err_num:400
medium pred: SELECT avg(T1.sales) FROM Bookings AS T1 JOIN coach AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.budget_type_Description = "Ebba"
medium gold: SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1

eval_err_num:401
extra pred: SELECT ResName FROM PHOTOS AS T1 JOIN has_amenity AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID WHERE T1.city < T2.Jul INTERSECT SELECT T2.Name FROM STAFF AS T1 JOIN has_amenity AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID WHERE T1.student_capacity > 100000
extra gold: SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011

eval_err_num:402
extra pred: SELECT count(*) FROM item WHERE id NOT IN ( SELECT enzyme_id FROM medicine_enzyme_interaction WHERE LENGTH > 8
extra gold: SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)

eval_err_num:403
medium pred: SELECT count(*) FROM home_game WHERE budgeted > "1989-09-03" OR YEAR < '1989-04-24 23:51:54'
medium gold: SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008

eval_err_num:404
easy pred: SELECT count(*) FROM player
easy gold: SELECT count(*) FROM players

eval_err_num:405
easy pred: SELECT count(*) FROM player
easy gold: SELECT count(*) FROM players

eval_err_num:406
easy pred: SELECT count(*) FROM Vehicles;
easy gold: SELECT count(*) FROM matches

eval_err_num:407
easy pred: SELECT count(*) FROM volume
easy gold: SELECT count(*) FROM matches

eval_err_num:408
medium pred: SELECT name_first , name_last FROM player WHERE country = '';
medium gold: SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'

eval_err_num:409
medium pred: SELECT name_first , name_last FROM player
medium gold: SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'

eval_err_num:410
medium pred: SELECT avg(age) , job FROM Person
medium gold: SELECT avg(loser_age) ,  avg(winner_age) FROM matches

eval_err_num:411
medium pred: SELECT avg(age) FROM products WHERE job = "UK" AND pages_per_minute_color = 1
medium gold: SELECT avg(loser_age) ,  avg(winner_age) FROM matches

eval_err_num:412
easy pred: SELECT min(rank) FROM TRACK
easy gold: SELECT avg(winner_rank) FROM matches

eval_err_num:413
easy pred: SELECT AVG(UnitPrice) FROM TRACK
easy gold: SELECT avg(winner_rank) FROM matches

eval_err_num:414
easy pred: SELECT min(rank) FROM review
easy gold: SELECT min(loser_rank) FROM matches

eval_err_num:415
easy pred: SELECT min(rank) FROM MATCH
easy gold: SELECT min(loser_rank) FROM matches

eval_err_num:416
easy pred: SELECT count(DISTINCT SOURCE) FROM injury_accident
easy gold: SELECT count(DISTINCT country_code) FROM players

eval_err_num:417
easy pred: SELECT count(DISTINCT T1.Official_native_language) FROM player
easy gold: SELECT count(DISTINCT country_code) FROM players

eval_err_num:418
easy pred: SELECT count(DISTINCT Name) FROM PHOTOS
easy gold: SELECT count(DISTINCT loser_name) FROM matches

eval_err_num:419
easy pred: SELECT count(DISTINCT Name) FROM Person
easy gold: SELECT count(DISTINCT loser_name) FROM matches

eval_err_num:420
easy pred: SELECT T1.title FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid GROUP BY T2.GenreId HAVING avg(bikes_available) > 10
easy gold: SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10

eval_err_num:421
easy pred: SELECT name FROM people WHERE points > 10
easy gold: SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10

eval_err_num:422
hard pred: SELECT title FROM albums; WHERE director = 'James Cameron" INTERSECT SELECT player_api_id FROM song WHERE replacement_cost = 1
hard gold: SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016

eval_err_num:423
hard pred: SELECT pName FROM Player WHERE birth_country = "Midfielder" INTERSECT SELECT player_api_id FROM Player_Attributes WHERE preferred_foot = "Defender"
hard gold: SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016

eval_err_num:424
medium pred: SELECT COUNT(*) FROM MATCH WHERE YEAR = 1885 OR YEAR = 2010
medium gold: SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016

eval_err_num:425
medium pred: SELECT count(*) FROM MATCH WHERE LOCATION = "England" OR Eliminated_By = "Orton"
medium gold: SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016

eval_err_num:426
extra pred: SELECT T1.country , T1.state_province_county FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T2.College = "Maryland" INTERSECT SELECT T1.country , T1.name_last FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T1.Country_name = "Defender"
extra gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'

eval_err_num:427
extra pred: SELECT T1.state , name_last FROM player AS T1 JOIN player_award AS T2 ON T1.player_id = T2.player_id WHERE T2.College = 1998 INTERSECT SELECT T1.Country_name , name_last FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T1.Country_name = "Indonesia"
extra gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'

eval_err_num:428
medium pred: SELECT emp_fname , country FROM employee ORDER BY age LIMIT 1
medium gold: SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1

eval_err_num:429
medium pred: SELECT emp_fname , country FROM Student ORDER BY age LIMIT 1
medium gold: SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1

eval_err_num:430
medium pred: SELECT name_first , name_last FROM player ORDER BY emp_dob
medium gold: SELECT first_name ,  last_name FROM players ORDER BY birth_date

eval_err_num:431
medium pred: SELECT fname , lname FROM actor ORDER BY age
medium gold: SELECT first_name ,  last_name FROM players ORDER BY birth_date

eval_err_num:432
medium pred: SELECT Date_Claim_Made FROM player WHERE birth_country = '';
medium gold: SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date

eval_err_num:433
medium pred: SELECT fname , lname FROM people ORDER BY date_of_birth
medium gold: SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date

eval_err_num:434
hard pred: SELECT T1.name_first , name_last FROM player AS T1 JOIN player_award AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 1
hard gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1

eval_err_num:435
hard pred: SELECT T1.name_first , T1.country FROM player AS T1 JOIN player_award AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 1
hard gold: SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1

eval_err_num:436
hard pred: SELECT YEAR FROM SECTION GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
hard gold: SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1

eval_err_num:437
hard pred: SELECT YEAR FROM SECTION GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1
hard gold: SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1

eval_err_num:438
hard pred: SELECT t1.name , rank FROM captain AS T1 JOIN captain AS T2 ON T1.team_id = T2.team_id WHERE T1.class = (SELECT avg(rating) FROM prereq
hard gold: SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1

eval_err_num:439
hard pred: SELECT T1.name_first , COUNT(*) FROM player AS T1 JOIN player_award AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id ORDER BY COUNT(*) DESC LIMIT 1;
hard gold: SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1

eval_err_num:440
hard pred: SELECT title FROM captain ORDER BY salary DESC LIMIT 1
hard gold: SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1

eval_err_num:441
hard pred: SELECT artist_name FROM captain WHERE competition_type = 'Panama' GROUP BY Reign ORDER BY COUNT(*) DESC LIMIT 1
hard gold: SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1

eval_err_num:442
medium pred: SELECT T1.name FROM postseason AS T1 JOIN Rooms AS T2 ON T1.Customer_Event_ID = T2.constructorid WHERE T2.first_name = "Graphics" GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1
medium gold: SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1

eval_err_num:443
medium pred: SELECT T1.title , T1.Pixels FROM vocals AS T1 JOIN songs AS T2 ON T1.film_id = T2.film_id WHERE T2.languages = 'Psychology'
medium gold: SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1

eval_err_num:444
medium pred: SELECT POSITION , avg(overall_rating) FROM player GROUP BY POSITION
medium gold: SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

eval_err_num:445
medium pred: SELECT POSITION , AVG(total) FROM player
medium gold: SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

eval_err_num:446
medium pred: SELECT Total_Points , name_last FROM player GROUP BY POSITION
medium gold: SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

eval_err_num:447
medium pred: SELECT name_first , name_last FROM player WHERE death_year = '';
medium gold: SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name

eval_err_num:448
medium pred: SELECT count(*) , POSITION FROM player GROUP BY POSITION
medium gold: SELECT count(*) ,  country_code FROM players GROUP BY country_code

eval_err_num:449
medium pred: SELECT Country_name , COUNT(*) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country GROUP BY T1.Country_name
medium gold: SELECT count(*) ,  country_code FROM players GROUP BY country_code

eval_err_num:450
hard pred: SELECT country FROM competition GROUP BY country ORDER BY count(*) DESC LIMIT 1
hard gold: SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1

eval_err_num:451
hard pred: SELECT country FROM competition GROUP BY country ORDER BY count(*) DESC LIMIT 1
hard gold: SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1

eval_err_num:452
easy pred: SELECT country FROM swimmer GROUP BY country HAVING count(*) > 1
easy gold: SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50

eval_err_num:453
easy pred: SELECT country FROM country WHERE competition_type > 85
easy gold: SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50

eval_err_num:454
medium pred: SELECT count(*) , Competition FROM constructors GROUP BY Competition
medium gold: SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date

eval_err_num:455
medium pred: SELECT sum(enrollment) , COUNT(*) FROM elimination GROUP BY Competition
medium gold: SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date

eval_err_num:456
medium pred: SELECT count(*) , Competition FROM MATCH GROUP BY Competition
medium gold: SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR

eval_err_num:457
medium pred: SELECT T1.Aircraft , COUNT(*) FROM country AS T1 JOIN MATCH AS T2 ON T1.Country_id = T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft
medium gold: SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR

eval_err_num:458
medium pred: SELECT t1.name , rank FROM captain ORDER BY age LIMIT 3
medium gold: SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3

eval_err_num:459
medium pred: SELECT name , rank FROM captain ORDER BY date LIMIT 3
medium gold: SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3

eval_err_num:460
medium pred: SELECT count(*) FROM salary AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE T2.name = "Demon Red Stockings'
medium gold: SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'

eval_err_num:461
medium pred: SELECT count(*) FROM postseason AS T1 JOIN follows AS T2 ON T1.u_id = T2.team_id_br WHERE T2.first_name = "Fanny"
medium gold: SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'

eval_err_num:462
hard pred: SELECT t1.name , T1.country , T1.surname FROM candidates AS T1 JOIN people AS T2 ON T1.i_id = T2.i_id ORDER BY T2.rank DESC LIMIT 1
hard gold: SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1

eval_err_num:463
hard pred: SELECT name_first , name_last FROM player GROUP BY emp_jobcode ORDER BY count(*) DESC LIMIT 1
hard gold: SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1

eval_err_num:464
medium pred: SELECT count(*) , POSITION FROM player GROUP BY POSITION
medium gold: SELECT count(*) ,  hand FROM players GROUP BY hand

eval_err_num:465
medium pred: SELECT POSITION , count(*) FROM player GROUP BY POSITION
medium gold: SELECT count(*) ,  hand FROM players GROUP BY hand

eval_err_num:466
easy pred: SELECT count(*) FROM ship AS T1 JOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T2.Nationality = "United States"
easy gold: SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'

eval_err_num:467
medium pred: SELECT name , cost FROM ship ORDER BY name DESC
medium gold: SELECT name ,  tonnage FROM ship ORDER BY name DESC

eval_err_num:468
medium pred: SELECT name , dates_active , date FROM races
medium gold: SELECT name ,  date FROM battle

eval_err_num:469
medium pred: SELECT avg(weight) , min(weight) , min(oppose_rate) FROM people GROUP BY emp_jobcode
medium gold: SELECT max(killed) ,  min(killed) FROM death

eval_err_num:470
easy pred: SELECT avg(weight) , day_of_week FROM people GROUP BY day_of_week
easy gold: SELECT avg(injured) FROM death

eval_err_num:471
medium pred: SELECT T2.Birth_Date , T1.Fate FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id = t2.ship_id WHERE t1.product_name = "chervil"
medium gold: SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'

eval_err_num:472
medium pred: SELECT title FROM playlists; WHERE name != "%Digital%"
medium gold: SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'

eval_err_num:473
medium pred: SELECT product FROM enzyme WHERE name = "Demon Cameron"
medium gold: SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'

eval_err_num:474
hard pred: SELECT name , email FROM races WHERE duration > 10
hard gold: SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10

eval_err_num:475
extra pred: SELECT T1.name , T4.country_name FROM ship AS T1 JOIN captain AS T2 ON T1.Ship_ID = T2.Ship_ID GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1

eval_err_num:476
medium pred: SELECT DISTINCT t1.product_name FROM products AS T1 JOIN songs AS T2 ON T1.id = T2.id WHERE T2.nationality = "sesame"
medium gold: SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'

eval_err_num:477
easy pred: SELECT count(DISTINCT Name) FROM PHOTOS
easy gold: SELECT count(DISTINCT RESULT) FROM battle

eval_err_num:478
extra pred: SELECT count(*) FROM manufacturer WHERE flag = 'Panama'
extra gold: SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );

eval_err_num:479
extra pred: SELECT T1.name , T1.Aircraft FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE TYPE = "United States"
extra gold: SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'

eval_err_num:480
extra pred: SELECT product_details , image_url FROM ship WHERE Appelation = "United States"
extra gold: SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'

eval_err_num:481
medium pred: SELECT date_of_birth FROM Residents WHERE other_details LIKE '%Miss%'
medium gold: SELECT note FROM death WHERE note LIKE '%East%'

eval_err_num:482
medium pred: SELECT address_content , address_line_2 FROM addresses
medium gold: SELECT line_1 ,  line_2 FROM addresses

eval_err_num:483
medium pred: SELECT first_name , last_name FROM address
medium gold: SELECT line_1 ,  line_2 FROM addresses

eval_err_num:484
easy pred: SELECT count(*) FROM COURSE
easy gold: SELECT count(*) FROM Courses

eval_err_num:485
easy pred: SELECT count(*) FROM COURSE
easy gold: SELECT count(*) FROM Courses

eval_err_num:486
easy pred: SELECT count(DISTINCT class_section) FROM CLASS WHERE crs_code = 'ACCT-211'
easy gold: SELECT course_description FROM Courses WHERE course_name  =  'math'

easy pred: SELECT course_description FROM COURSES
easy gold: SELECT course_description FROM Courses WHERE course_name  =  'math'

eval_err_num:487
easy pred: SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.address_id WHERE T1.city = "Lyla"
easy gold: SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'

eval_err_num:488
easy pred: SELECT Zip_code FROM weather WHERE name = 94107
easy gold: SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'

eval_err_num:489
extra pred: SELECT T2.emp_fname , T1.dept_code FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code = T2.crs_code GROUP BY T1.dept_code ORDER BY sum(T1.crs_credit) DESC LIMIT 1
extra gold: SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:490
extra pred: SELECT T2.dept_name , T2.dept_address FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id GROUP BY T1.department_id ORDER BY sum(degrees) DESC LIMIT 1
extra gold: select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1

eval_err_num:491
easy pred: SELECT count(DISTINCT dept_name) FROM course
easy gold: SELECT count(DISTINCT department_id) FROM Degree_Programs

eval_err_num:492
easy pred: SELECT count(DISTINCT dept_name) FROM course
easy gold: SELECT count(DISTINCT department_id) FROM Degree_Programs

eval_err_num:493
easy pred: SELECT count(DISTINCT rank) FROM CLASS
easy gold: SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs

eval_err_num:494
easy pred: SELECT count(DISTINCT sportname) FROM degrees
easy gold: SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs

eval_err_num:495
medium pred: SELECT count(*) FROM degrees WHERE dept_name = "San Jose State University"
medium gold: SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'

eval_err_num:496
medium pred: SELECT count(*) FROM degrees WHERE dept_name = "San Jose State University"
medium gold: SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'

eval_err_num:497
medium pred: SELECT Name , Other_Details FROM ref_colors
medium gold: SELECT section_name ,  section_description FROM Sections

eval_err_num:498
medium pred: SELECT Name , Other_Details FROM ref_colors
medium gold: SELECT section_name ,  section_description FROM Sections

eval_err_num:499
medium pred: SELECT T1.personal_name , T1.credits FROM ENROLLED_IN AS T1 JOIN Subjects AS T2 ON T1.course_id = T2.course_id GROUP BY T2.course_id HAVING count(*) <= 2
medium gold: SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2

eval_err_num:500
medium pred: SELECT T1.id , T1.credits FROM accounts AS T1 JOIN teaches AS T2 ON T1.course_id = T2.course_id GROUP BY T2.course_id HAVING count(*) < 2
medium gold: SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2

eval_err_num:501
easy pred: SELECT Song FROM invoices
easy gold: SELECT section_name FROM Sections ORDER BY section_name DESC

eval_err_num:502
easy pred: SELECT name FROM genres; ORDER BY name DESC
easy gold: SELECT section_name FROM Sections ORDER BY section_name DESC

eval_err_num:503
extra pred: SELECT semester , YEAR FROM SECTION GROUP BY semester , YEAR ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:504
extra pred: SELECT T1.name , T2.account_name FROM list AS T1 JOIN prereq AS T2 ON T1.student_id = T2.student_id GROUP BY T2.s_id ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:505
medium pred: SELECT course_description FROM ref_product_categories WHERE t1.product_name LIKE 'S%'
medium gold: SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'

eval_err_num:506
medium pred: SELECT T2.dept_name FROM products AS t1 JOIN enrollments AS t2 ON t1.product_category_code = t2.product_category_code WHERE t1.product_name LIKE "%Functional%"
medium gold: SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'

eval_err_num:507
medium pred: SELECT cName , stu_phone , individual_last_name FROM course WHERE crs_code = 'CIS-220'
medium gold: SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2

eval_err_num:508
medium pred: SELECT T1.date_of_enrolment , individual_middle_name , min(stu_gpa) FROM Student_Course_Enrolment AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN department AS T4 ON T3.dept_code = T4.dept_code WHERE T4.dept_name = "LG-P760";
medium gold: SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2

eval_err_num:509
hard pred: SELECT first_name , middle_name , last_name FROM Student_Course_Enrolment WHERE course_id = 1
hard gold: SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'

eval_err_num:510
hard pred: SELECT T1.date_of_enrolment , T1.course_description , individual_last_name FROM Student_Course_Enrolment WHERE 18000 = 600;
hard gold: SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'

eval_err_num:511
extra pred: SELECT T4.dept_name FROM Courses AS T1 JOIN enroll AS T2 ON T1.class_code = T2.Claim_id GROUP BY t2.program_id ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1

eval_err_num:512
extra pred: SELECT CLASS FROM CLASS GROUP BY CLASS ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1

eval_err_num:513
extra pred: SELECT T1.address_line_1 , T1.Claim_id FROM Student_Course_Enrolment AS T1 JOIN enroll AS T2 ON T1.classroom = T2.classroom GROUP BY program ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:514
extra pred: SELECT T1.title , T1.credits FROM CLASS AS T1 JOIN enroll AS T2 ON T1.classroom = T2.classroom GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:515
extra pred: SELECT T1.student_id , T1.other_details , count(*) FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:516
extra pred: SELECT T3.course_name , T1.Pixels , count(*) FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:517
hard pred: SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)
hard gold: SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )

eval_err_num:518
hard pred: SELECT title FROM course WHERE id NOT IN (SELECT course_id FROM prereq)
hard gold: SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )

eval_err_num:519
easy pred: SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id
easy gold: SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id

eval_err_num:520
easy pred: SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id
easy gold: SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id

eval_err_num:521
extra pred: SELECT T1.course_name FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1

eval_err_num:522
extra pred: SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) DESC LIMIT 1
extra gold: SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1

eval_err_num:523
extra pred: SELECT lname FROM student WHERE state = 111 EXCEPT SELECT lname FROM student WHERE state = 'M'
extra gold: SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id

eval_err_num:524
extra pred: SELECT lname FROM student WHERE city_code = 'PHL' AND city_code != 'BAL'
extra gold: SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id

eval_err_num:525
medium pred: SELECT date_valid_from , T1.amount_of_refund FROM item AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.customer_id WHERE T1.dept_name = 'Psychology' GROUP BY T2.course_id HAVING count(*) >= 2
medium gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2

eval_err_num:526
medium pred: SELECT T1.id , T1.surname FROM files AS T1 JOIN SECTION AS T2 ON T1.apid = T2.driverid GROUP BY T1.employeeid HAVING count(*) >= 2
medium gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2

eval_err_num:527
medium pred: SELECT customer_phone FROM employees AS T1 JOIN invoices AS T2 ON T2.customer_id = T2.address_id WHERE T1.first_name = "Graphics"
medium gold: SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'

eval_err_num:528
medium pred: SELECT customer_phone FROM Student_Addresses WHERE family_name = "Life Insurance"
medium gold: select cell_mobile_number from students where first_name  =  'timmothy' and last_name  =  'ward'

eval_err_num:529
medium pred: SELECT first_name , middle_name , last_name FROM student WHERE first_name = 107
medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1

eval_err_num:530
medium pred: SELECT stu_fname , individual_middle_name , stu_gpa FROM student WHERE stu_gpa = 'CIS-220'
medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1

eval_err_num:531
medium pred: SELECT first_name , middle_name , last_name FROM Staff;
medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1

eval_err_num:532
medium pred: SELECT T3.EMP_FNAME , T1.date_of_completion , avg(years_working) FROM college AS T1 JOIN player_college AS T2 ON T1.course_id = T2.course_Id ORDER BY stu_gpa ASC LIMIT 1
medium gold: SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1

eval_err_num:533
easy pred: SELECT DISTINCT product_details FROM employees WHERE first_name = "Astrid" AND last_name = "Edwards";
easy gold: SELECT first_name FROM Students WHERE current_address_id != permanent_address_id

eval_err_num:534
easy pred: SELECT DISTINCT stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T2.class_code = T3.class_code WHERE T3.crs_code = 'ACCT-211' OR T1.stu_lname = 'A'
easy gold: SELECT first_name FROM Students WHERE current_address_id != permanent_address_id

eval_err_num:535
extra pred: SELECT T2.address , count(*) FROM address AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom GROUP BY T2.address_id ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:536
extra pred: SELECT T2.dept_name , T1.long , count(*) FROM student AS T1 JOIN address AS T2 ON T1.address_id = T2.address_id GROUP BY T2.address_id ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:537
easy pred: SELECT title FROM department WHERE T1.first_name = "LG-P760";
easy gold: SELECT avg(transcript_date) FROM Transcripts

eval_err_num:538
easy pred: SELECT avg(rating) FROM Products
easy gold: SELECT avg(transcript_date) FROM Transcripts

eval_err_num:539
medium pred: SELECT Date , Date_Payment_Made , Amount_Payment FROM Payments
medium gold: SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1

eval_err_num:540
medium pred: SELECT payment_date FROM files WHERE Document_name = "Marry CV"
medium gold: SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1

eval_err_num:541
easy pred: SELECT count(*) FROM item WHERE title = "Fast Staff'
easy gold: SELECT count(*) FROM Transcripts

eval_err_num:542
easy pred: SELECT count(*) FROM papers
easy gold: SELECT count(*) FROM Transcripts

eval_err_num:543
medium pred: SELECT payment_date FROM trip ORDER BY duration DESC LIMIT 1
medium gold: SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1

eval_err_num:544
medium pred: SELECT max(date_moved_in) FROM Residents WHERE first_name = "Carole" AND last_name = "Smith";
medium gold: SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1

eval_err_num:545
hard pred: SELECT count(*) , class_room FROM CLASS GROUP BY class_room ORDER BY count(*) DESC LIMIT 1
hard gold: SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:546
hard pred: SELECT avg(enr) , COUNT(*) FROM Courses GROUP BY dept_code
hard gold: SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:547
extra pred: SELECT date_test_taken FROM INVOICES
extra gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1

eval_err_num:548
extra pred: SELECT Date , count(*) FROM user_profiles GROUP BY date_of_latest_revision ORDER BY count(*) ASC LIMIT 1
extra gold: SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1

eval_err_num:549
extra pred: SELECT semester , YEAR FROM takes WHERE course_id = 1958 INTERSECT SELECT semester , YEAR FROM takes WHERE semester = 'Spring' AND YEAR = 2010
extra gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Maste
r' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'

eval_err_num:550
extra pred: SELECT f_id FROM SECTION WHERE semester = 'Fall' AND YEAR = 2009 INTERSECT SELECT course_id FROM SECTION WHERE semester = 'Spring' AND YEAR = 2010
extra gold: SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Maste
r' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'

eval_err_num:551
easy pred: SELECT count(DISTINCT dept_address) FROM Students_in_Detention
easy gold: SELECT count(DISTINCT current_address_id) FROM Students

eval_err_num:552
easy pred: SELECT DISTINCT fname FROM student
easy gold: SELECT count(DISTINCT current_address_id) FROM Students

eval_err_num:553
easy pred: SELECT T2.student_details FROM students AS T1 JOIN student_course_attendance AS T2 ON T1.student_id = T2.student_id ORDER BY T1.registration_date DESC
easy gold: SELECT other_student_details FROM Students ORDER BY other_student_details DESC

eval_err_num:554
easy pred: SELECT * FROM students ORDER BY age DESC
easy gold: SELECT other_student_details FROM Students ORDER BY other_student_details DESC

eval_err_num:555
easy pred: SELECT product_details FROM vocals WHERE product_details = "David "%Latte%"
easy gold: SELECT section_description FROM Sections WHERE section_name  =  'h'

eval_err_num:556
easy pred: SELECT t2.section_title FROM products AS t1 JOIN document_sections AS t2 ON t1.document_code = t2.color_code WHERE t1.product_name = "David CV"
easy gold: SELECT section_description FROM Sections WHERE section_name  =  'h'

eval_err_num:557
hard pred: SELECT T3.stu_fname FROM chip_model AS T1 JOIN follows AS T2 ON T1.class_code = T2.class_code JOIN student AS T3 ON T2.stu_num = T3.id WHERE T1.crs_code = "Text" OR T2.enroll_grade = 'Carol Explorer'
hard gold: select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'

eval_err_num:558
hard pred: SELECT T3.stu_fname FROM orders AS T1 JOIN teachers AS T2 ON T1.stu_num = T2.stu_num WHERE T2.enroll_grade = 'C' OR T2.enroll_grade = 'A'
hard gold: select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'

eval_err_num:559
easy pred: SELECT title FROM item ORDER BY title
easy gold: SELECT Title FROM Cartoon ORDER BY title

eval_err_num:560
easy pred: SELECT title FROM item ORDER BY title
easy gold: SELECT Title FROM Cartoon ORDER BY title

eval_err_num:561
easy pred: SELECT title FROM albums; WHERE title = 'Steven Spielberg'
easy gold: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones";

eval_err_num:562
easy pred: SELECT title FROM swimmer WHERE title = 'Steven Spielberg'
easy gold: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones";

eval_err_num:563
easy pred: SELECT count(*) FROM authors AS T1 JOIN course AS T2 ON T1.classroom = T2.classroom WHERE T2.firstname = "KAWA" AND T1.lastname = "Gibbons"
easy gold: SELECT count(*) FROM Cartoon WHERE Written_by = "Joseph Kuhr";

eval_err_num:564
easy pred: SELECT count(*) FROM item AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication WHERE T1.name = 'Differential to the Wall";
easy gold: SELECT count(*) FROM Cartoon WHERE Written_by = "Joseph Kuhr";

eval_err_num:565
medium pred: SELECT title , director FROM movie ORDER BY budget_million
medium gold: SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date

eval_err_num:566
medium pred: SELECT title , director FROM Movie WHERE director = "null" ORDER BY director
medium gold: SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date

eval_err_num:567
medium pred: SELECT title FROM albums; WHERE director = 'Steven Spielberg'
medium gold: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones" OR Directed_by = "Brandon Vietti";

eval_err_num:568
medium pred: SELECT title FROM albums; WHERE director = 'Steven Spielberg'
medium gold: SELECT Title FROM Cartoon WHERE Directed_by = "Ben Jones" OR Directed_by = "Brandon Vietti";

eval_err_num:569
hard pred: SELECT country , count(*) FROM camera_lens GROUP BY country ORDER BY count(*) DESC LIMIT 1
hard gold: SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;

eval_err_num:570
hard pred: SELECT country , count(*) FROM weather GROUP BY country ORDER BY count(*) DESC LIMIT 1
hard gold: SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;

eval_err_num:571
medium pred: SELECT count(DISTINCT Team) FROM Movie
medium gold: SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;

eval_err_num:572
medium pred: SELECT count(DISTINCT program_id) FROM movie AS T1 JOIN injury_accident AS T2 ON T1.id = T2.game_id WHERE T1.participant_details = 'Ethiopia'
medium gold: SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;

eval_err_num:573
easy pred: SELECT product FROM products WHERE name = "sesame"
easy gold: SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio";

eval_err_num:574
easy pred: SELECT title FROM film WHERE title = "Fast POLLOCK'
easy gold: SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio";

eval_err_num:575
easy pred: SELECT product_category_description FROM products WHERE name = "Fast Kitty Rag"
easy gold: SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio";

eval_err_num:576
easy pred: SELECT title FROM course WHERE name = "LG-P760";
easy gold: SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio";

eval_err_num:577
easy pred: SELECT count(*) FROM film WHERE languages = "Fast As a Shark";
easy gold: SELECT count(*) FROM TV_Channel WHERE LANGUAGE = "English";

eval_err_num:578
easy pred: SELECT count(*) FROM item WHERE languages = 'Physics'
easy gold: SELECT count(*) FROM TV_Channel WHERE LANGUAGE = "English";

eval_err_num:579
hard pred: SELECT T2.languages , COUNT(*) FROM management AS T1 JOIN albums AS T2 ON T1.f_id = T2.f_id GROUP BY T2.name ORDER BY count(*) ASC LIMIT 1
hard gold: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;

eval_err_num:580
hard pred: SELECT t3.characteristic_name , count(*) FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id = t2.channel_id GROUP BY t2.station_id ORDER BY count(*) LIMIT 1
hard gold: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;

eval_err_num:581
medium pred: SELECT T1.name , COUNT(*) FROM drivers AS T1 JOIN assignedto AS T2 ON T1.manufacturer = T2.code GROUP BY T2.name
medium gold: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE

eval_err_num:582
medium pred: SELECT count(*) , Competition FROM MATCH GROUP BY Competition
medium gold: SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE

eval_err_num:583
medium pred: SELECT title FROM albums;
medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = "The Rise of the Blue Beetle!";

eval_err_num:584
medium pred: SELECT title FROM Aircraft WHERE name = "sesame"
medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = "The Rise of the Blue Beetle!";

eval_err_num:585
medium pred: SELECT title FROM albums; WHERE T2.name = "Japan"
medium gold: SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";

eval_err_num:586
medium pred: SELECT title FROM film WHERE title = "Demon POLLOCK'
medium gold: SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";

eval_err_num:587
easy pred: SELECT Song FROM film ORDER BY rating_in_percent
easy gold: SELECT Episode FROM TV_series ORDER BY rating

eval_err_num:588
easy pred: SELECT subject_name FROM SUBJECTS ORDER BY image_name
easy gold: SELECT Episode FROM TV_series ORDER BY rating

eval_err_num:589
medium pred: SELECT max(gradepoint) , image_url , T1.city_id FROM Skills ORDER BY LENGTH DESC LIMIT 3
medium gold: SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;

eval_err_num:590
medium pred: SELECT date , director FROM film ORDER BY rental_rate DESC LIMIT 3
medium gold: SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;

eval_err_num:591
medium pred: SELECT min(bathroom_count) , avg(market_share) FROM weekly_weather
medium gold: SELECT max(SHARE) , min(SHARE) FROM TV_series;

eval_err_num:592
medium pred: SELECT max(stars) , min(stars) FROM weekly_weather WHERE incident_type_code = "Amersham"
medium gold: SELECT max(SHARE) , min(SHARE) FROM TV_series;

eval_err_num:593
easy pred: SELECT T1.date_of_completion FROM Ref_Service_Types AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.id WHERE T2.first_name = "Graphics"
easy gold: SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime";

eval_err_num:594
easy pred: SELECT date_stored FROM Restaurant WHERE T2.first_name = "LG-P760";
easy gold: SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime";

eval_err_num:595
easy pred: SELECT Elimination_Move FROM products WHERE name = "Fast As Before Shark";
easy gold: SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime";

eval_err_num:596
easy pred: SELECT Elimination_Move FROM products WHERE t1.campus = "sesame"
easy gold: SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime";

eval_err_num:597
medium pred: SELECT title FROM film WHERE title = "sesame"
medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = "A Love of a Lifetime";

eval_err_num:598
medium pred: SELECT T1.title FROM game AS T1 JOIN LANGUAGE AS T2 ON T1.id = T2.game_id WHERE T2.player = 'AIRPORT POLLOCK'
medium gold: SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = "A Love of a Lifetime";

eval_err_num:599
medium pred: SELECT title FROM film WHERE special_features = 'R'
medium gold: SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";

eval_err_num:600
medium pred: SELECT title FROM film WHERE title = "Fast Jose"
medium gold: SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = "Sky Radio";

eval_err_num:601
medium pred: SELECT count(*) , T1.director FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID = T2.mID GROUP BY T2.AlbumID
medium gold: SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by

eval_err_num:602
medium pred: SELECT count(*) FROM Movie
medium gold: SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by

eval_err_num:603
medium pred: SELECT product_category_description , OWNER FROM weekly_weather ORDER BY max_aperture DESC LIMIT 1
medium gold: select production_code ,  channel from cartoon order by original_air_date desc limit 1

eval_err_num:604
medium pred: SELECT max(market_share) , contact_number FROM customer_contact_channels ORDER BY (active_to_date - active_from_date) DESC LIMIT 1
medium gold: select production_code ,  channel from cartoon order by original_air_date desc limit 1

eval_err_num:605
medium pred: SELECT title FROM channel WHERE OWNER = "LG-P760";
medium gold: SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  "yes"

eval_err_num:606
medium pred: SELECT title FROM film WHERE name = 'Psychology'
medium gold: SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  "yes"

eval_err_num:607
medium pred: SELECT T1.duration FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE t2.Company_name = "Nokia Ernser"
medium gold: SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'

eval_err_num:608
medium pred: SELECT T1.country FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid WHERE t1.fname = "Jeremy" AND t1.lname = "Gibbons"
medium gold: SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'

eval_err_num:609
hard pred: SELECT title FROM products WHERE product != "%Scanner%"
hard gold: SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'

eval_err_num:610
hard pred: SELECT country FROM vocals WHERE name != '%International%'
hard gold: SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'

eval_err_num:611
extra pred: SELECT title FROM channel WHERE special_features = 'CCTV' INTERSECT SELECT title FROM channel WHERE OWNER = 'CCTV'
extra gold: SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'

eval_err_num:612
extra pred: SELECT T1.date_in_location_from , T3.Type FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id = t2.channel_id WHERE t2.time_of_day = 'Morning'
extra gold: SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'

eval_err_num:613
medium pred: SELECT characteristic_name , channel , T1.Hardware_colours FROM channel WHERE OWNER != 'CCTV'
medium gold: SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'

eval_err_num:614
medium pred: SELECT max(market_share) , country , country FROM channel WHERE OWNER != 'CCTV'
medium gold: SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'

eval_err_num:615
easy pred: SELECT channel_code FROM channel GROUP BY OWNER HAVING count(*) > 2
easy gold: SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2

eval_err_num:616
easy pred: SELECT Software_Platform FROM channel GROUP BY Software_Platform HAVING count(*) > 2
easy gold: SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2

eval_err_num:617
hard pred: SELECT f_id FROM channel WHERE OWNER != 'CCTV'
hard gold: SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'

eval_err_num:618
hard pred: SELECT avg(price) FROM channel WHERE OWNER != 'CCTV'
hard gold: SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'

eval_err_num:619
hard pred: SELECT product_details FROM products WHERE product_details != "%Latte%"
hard gold: SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')

eval_err_num:620
hard pred: SELECT product_details FROM channel WHERE OWNER != 'CCTV'
hard gold: SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')

eval_err_num:621
easy pred: SELECT count(*) FROM player
easy gold: SELECT count(*) FROM poker_player

eval_err_num:622
easy pred: SELECT count(*) FROM player WHERE birth_country = "Fail"
easy gold: SELECT count(*) FROM poker_player

eval_err_num:623
easy pred: SELECT Player_name FROM albums; ORDER BY Votes DESC
easy gold: SELECT Earnings FROM poker_player ORDER BY Earnings DESC

eval_err_num:624
easy pred: SELECT title FROM albums; ORDER BY max_aperture DESC
easy gold: SELECT Earnings FROM poker_player ORDER BY Earnings DESC

eval_err_num:625
medium pred: SELECT title FROM course WHERE title = 'Statistics'
medium gold: SELECT Final_Table_Made ,  Best_Finish FROM poker_player

eval_err_num:626
medium pred: SELECT title FROM albums;
medium gold: SELECT Final_Table_Made ,  Best_Finish FROM poker_player

eval_err_num:627
easy pred: SELECT avg(rating) FROM TRACK WHERE Manufacturer = "MasterCard"
easy gold: SELECT avg(Earnings) FROM poker_player

eval_err_num:628
easy pred: SELECT AVG(Milliseconds) FROM chip_model
easy gold: SELECT avg(Earnings) FROM poker_player

eval_err_num:629
medium pred: SELECT rank FROM player ORDER BY Time_of_purchase DESC LIMIT 1
medium gold: SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1

eval_err_num:630
medium pred: SELECT Elimination_Move FROM player ORDER BY Floor_Exercise_Points DESC LIMIT 1
medium gold: SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1

eval_err_num:631
easy pred: SELECT player_api_id FROM Player_Attributes WHERE height < ( SELECT avg(overall_rating) FROM Player_Attributes WHERE preferred_foot = "left"
easy gold: SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000

eval_err_num:632
easy pred: SELECT T1.duration FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.duration < 85
easy gold: SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000

eval_err_num:633
easy pred: SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.dribbling = 2002
easy gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID

eval_err_num:634
easy pred: SELECT player_api_id FROM Player WHERE Days = "left"
easy gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID

eval_err_num:635
medium pred: SELECT pName FROM Player WHERE HS > 8
medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000

eval_err_num:636
medium pred: SELECT pName FROM Player WHERE height > 18000
medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000

eval_err_num:637
medium pred: SELECT Player_name FROM Player ORDER BY Player_name ASC
medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made

eval_err_num:638
medium pred: SELECT preferred_foot FROM Player ORDER BY meter_100
medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made

eval_err_num:639
hard pred: SELECT T2.Birth_Date FROM constructors AS T1 JOIN Player_Attributes AS T2 ON T1.date_stored = T2.People_ID ORDER BY T1.Points ASC LIMIT 1
hard gold: SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1

eval_err_num:640
hard pred: SELECT T2.Birth_Date FROM Player AS T1 JOIN people AS T2 ON T1.candidate_id = T2.people_id ORDER BY T1.Points ASC LIMIT 1
hard gold: SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1

eval_err_num:641
hard pred: SELECT unit_price FROM people ORDER BY Height DESC LIMIT 1
hard gold: SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1

eval_err_num:642
hard pred: SELECT Elimination_Move FROM player ORDER BY Height DESC LIMIT 1
hard gold: SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1

eval_err_num:643
medium pred: SELECT avg(overall_rating) FROM Player WHERE HS > 2000
medium gold: SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200

eval_err_num:644
medium pred: SELECT avg(HS) FROM Player WHERE HS > 5
medium gold: SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200

eval_err_num:645
medium pred: SELECT name FROM player ORDER BY name DESC
medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC

eval_err_num:646
medium pred: SELECT name FROM player ORDER BY name
medium gold: SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC

eval_err_num:647
medium pred: SELECT count(*) , job FROM Person GROUP BY name
medium gold: SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality

eval_err_num:648
medium pred: SELECT Date , birth_place FROM people ORDER BY image_name ASC
medium gold: SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC

eval_err_num:649
medium pred: SELECT image_name , image_url FROM people ORDER BY image_name
medium gold: SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC

eval_err_num:650
easy pred: SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM entrepreneur)
easy gold: SELECT Name FROM people WHERE Nationality != "Russia"

eval_err_num:651
hard pred: SELECT Name FROM people WHERE People_ID NOT IN (SELECT Affirmative FROM player_coach)
hard gold: SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)

eval_err_num:652
hard pred: SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM perpetrator)
hard gold: SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)

eval_err_num:653
easy pred: SELECT count(DISTINCT Birth_Place) FROM people
easy gold: SELECT count(DISTINCT Nationality) FROM people

eval_err_num:654
easy pred: SELECT count(DISTINCT label) FROM department
easy gold: SELECT count(DISTINCT Nationality) FROM people

eval_err_num:655
easy pred: SELECT count(DISTINCT state) FROM bank
easy gold: SELECT count(*) FROM area_code_state

eval_err_num:656
medium pred: SELECT individual_first_name , individual_middle_name , T1.Hardware_colours FROM individuals ORDER BY mgr_start_date
medium gold: SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC

eval_err_num:657
medium pred: SELECT email_address , cell_mobile_phone_number , email_address FROM addresses
medium gold: SELECT vote_id ,  phone_number ,  state FROM votes

eval_err_num:658
medium pred: SELECT max(Population) , min(Population) FROM settlements
medium gold: SELECT max(area_code) ,  min(area_code) FROM area_code_state

eval_err_num:659
easy pred: SELECT last_name FROM student WHERE state = "Roberto" AND last_name = "Almeida";
easy gold: SELECT max(created) FROM votes WHERE state  =  'CA'

eval_err_num:660
easy pred: SELECT name FROM playlists; WHERE name != "%Digital%"
easy gold: SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'

eval_err_num:661
medium pred: SELECT DISTINCT T1.state , day_Number FROM Customers
medium gold: SELECT DISTINCT state ,  created FROM votes

eval_err_num:662
medium pred: SELECT T3.ssn , T1.Mascot FROM orders AS T1 JOIN review AS T2 ON T1.i_id = T2.id GROUP BY T2.i_id HAVING count(*) >= 2
medium gold: SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2

eval_err_num:663
extra pred: SELECT title , chromosome , porphyria FROM customers ORDER BY birth_date LIMIT 1
extra gold: SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1

eval_err_num:664
medium pred: SELECT count(*) FROM park WHERE state = 'NY'; OR state = 'R';
medium gold: SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'

eval_err_num:665
extra pred: SELECT count(*) FROM ARTIST WHERE name NOT IN (SELECT T1.prereq_id FROM review)
extra gold: SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )

eval_err_num:666
extra pred: SELECT rid FROM trip WHERE zip_code = "Howard" GROUP BY city_code ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1

eval_err_num:667
medium pred: SELECT T1.Char_cells , T1.Hardware_colours FROM customers AS T1 JOIN candidate AS T2 ON T1.Negative = T2.customer_id WHERE T1.first_name = "LG-P760";
medium gold: SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'

eval_err_num:668
extra pred: SELECT T1.date_order_placed FROM Addresses AS T1 JOIN Staff AS T2 ON T1.cmi_cross_ref_id = T2.thing_id WHERE T2.source_system_code = "LG-P760";
extra gold: SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.co
ntestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'

eval_err_num:669
medium pred: SELECT name FROM product WHERE name LIKE "%ALA%"
medium gold: select contestant_name from contestants where contestant_name like "%al%"

eval_err_num:670
easy pred: SELECT country FROM competition WHERE LENGTH > 10000000
easy gold: SELECT Name FROM country WHERE IndepYear  >  1950

eval_err_num:671
easy pred: SELECT Nationality FROM organizations WHERE founded > 1900
easy gold: SELECT Name FROM country WHERE IndepYear  >  1950

eval_err_num:672
easy pred: SELECT count(*) FROM inventory WHERE special_features LIKE 'Full';
easy gold: SELECT count(*) FROM country WHERE GovernmentForm  =  "Republic"

eval_err_num:673
easy pred: SELECT count(*) FROM country WHERE country_id = country_id
easy gold: SELECT count(*) FROM country WHERE GovernmentForm  =  "Republic"

eval_err_num:674
easy pred: SELECT max(t2.active_to_date) FROM country AS T1 JOIN songs AS T2 ON T1.id = T2.country_id WHERE T1.first_name = "Rock";
easy gold: SELECT sum(SurfaceArea) FROM country WHERE Region  =  "Caribbean"

eval_err_num:675
easy pred: SELECT milliseconds FROM course WHERE dept_name = "Fast States'
easy gold: SELECT sum(SurfaceArea) FROM country WHERE Region  =  "Caribbean"

eval_err_num:676
easy pred: SELECT title FROM vocals WHERE name = "Fast Kitty City'
easy gold: SELECT Continent FROM country WHERE Name  =  "Anguilla"

eval_err_num:677
easy pred: SELECT title FROM products WHERE title = "Fast As Rag"
easy gold: SELECT Continent FROM country WHERE Name  =  "Anguilla"

eval_err_num:678
medium pred: SELECT Address FROM addresses WHERE city = "Blackville"
medium gold: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"

eval_err_num:679
medium pred: SELECT max(t2.active_to_date) FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id JOIN storm AS T3 ON T2.Tourist_ID = T3.storm_id WHERE T2.region_name = 'Denmark'
medium gold: SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  "Kabul"

eval_err_num:680
extra pred: SELECT T2.name FROM products AS T1 JOIN LANGUAGE AS T2 ON T1.camera_lens_id = T2.id GROUP BY T2.name ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage DESC LIMIT 1

eval_err_num:681
extra pred: SELECT artist_name FROM products WHERE name = "Fast Info. Rag"
extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba" ORDER BY Percentage DESC LIMIT 1

eval_err_num:682
medium pred: SELECT T2.balance , date_incident_end FROM party AS T1 JOIN lives_in AS T2 ON T1.city_id = T2.driverid WHERE T2.interaction_type = "Female"
medium gold: SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  "Brazil"

eval_err_num:683
medium pred: SELECT County_name , surname FROM addresses
medium gold: SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  "Brazil"

eval_err_num:684
medium pred: SELECT region_name , Population FROM region
medium gold: SELECT Population ,  Region FROM country WHERE Name  =  "Angola"

eval_err_num:685
medium pred: SELECT Area , T1.Date_Stored FROM Person AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id JOIN products AS T3 ON T2.person_id = T3.student_id
medium gold: SELECT Population ,  Region FROM country WHERE Name  =  "Angola"

eval_err_num:686
easy pred: SELECT AVG(UnitPrice) FROM Elimination WHERE country = 'male'
easy gold: SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa"

eval_err_num:687
easy pred: SELECT milliseconds FROM products WHERE name = "Fast As a Shark";
easy gold: SELECT avg(LifeExpectancy) FROM country WHERE Region  =  "Central Africa"

eval_err_num:688
hard pred: SELECT T1.country FROM country AS T1 JOIN invoices AS T2 ON T1.alid = T2.alid ORDER BY T2.duration LIMIT 1
hard gold: SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy LIMIT 1

eval_err_num:689
hard pred: SELECT country FROM people WHERE competition_type = 'Friendly' ORDER BY sales_billion LIMIT 1
hard gold: SELECT Name FROM country WHERE Continent  =  "Asia" ORDER BY LifeExpectancy LIMIT 1

eval_err_num:690
medium pred: SELECT sum(city_population) , max(duration) FROM enzyme WHERE County_name = 636
medium gold: SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  "Asia"

eval_err_num:691
medium pred: SELECT count(T2.friend) , count(*) FROM Residents AS T1 JOIN people AS T2 ON T1.id = T2.country_id WHERE T2.first_name = 'Australia'
medium gold: SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  "Asia"

eval_err_num:692
medium pred: SELECT avg(price) FROM products WHERE name = "Fast As a Shark";
medium gold: SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"

eval_err_num:693
medium pred: SELECT avg(price) FROM GENRE WHERE Country = "United Kingdom"
medium gold: SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  "Africa" AND GovernmentForm  =  "Republic"

eval_err_num:694
medium pred: SELECT max(t2.active_to_date) FROM albums AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.id WHERE T1.name = "Aerosmith";
medium gold: SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"

eval_err_num:695
medium pred: SELECT max(t2.active_to_date) FROM country AS T1 JOIN country AS T2 ON T1.id = T2.genre_id WHERE T1.first_name = 'LINDA' OR country = "Pop"
medium gold: SELECT sum(SurfaceArea) FROM country WHERE Continent  =  "Asia" OR Continent  =  "Europe"

eval_err_num:696
easy pred: SELECT count(*) FROM Person AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T1.city_code = "Rock"
easy gold: SELECT sum(Population) FROM city WHERE District  =  "Gelderland"

eval_err_num:697
easy pred: SELECT milliseconds FROM enzyme WHERE T1.name = "flax"
easy gold: SELECT sum(Population) FROM city WHERE District  =  "Gelderland"

eval_err_num:698
medium pred: SELECT avg(room_count) , avg(resolution) FROM people WHERE nationality = 'London'
medium gold: SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory"

eval_err_num:699
medium pred: SELECT max(Milliseconds) , meter_300 FROM elimination WHERE Account_details = "United Kingdom"
medium gold: SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  "US Territory"

eval_err_num:700
easy pred: SELECT count(DISTINCT title) FROM albums AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE TYPE = "shared"
easy gold: SELECT count(DISTINCT LANGUAGE) FROM countrylanguage

eval_err_num:701
easy pred: SELECT count(DISTINCT title) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE TYPE = "shared"
easy gold: SELECT count(DISTINCT LANGUAGE) FROM countrylanguage

eval_err_num:702
easy pred: SELECT count(*) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T1.id WHERE title = "Demon Kitty Rag"
easy gold: SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  "Africa"

eval_err_num:703
easy pred: SELECT count(DISTINCT label) FROM film WHERE languages = 'Physics'
easy gold: SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  "Africa"

eval_err_num:704
medium pred: SELECT count(DISTINCT language_id) FROM song WHERE languages = "english")
medium gold: SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"

eval_err_num:705
medium pred: SELECT count(*) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = "shared"
medium gold: SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Aruba"

eval_err_num:706
medium pred: SELECT T1.Official_native_language FROM country AS T1 JOIN files AS T2 ON T1.f_id = T2.f_id WHERE T1.duration = "Defender"
medium gold: SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  "T"

eval_err_num:707
medium pred: SELECT count(*) FROM country AS T1 JOIN election AS T2 ON T1.Country_id = T2.Country WHERE T2.College = "Maryland"
medium gold: SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  "Afghanistan" AND IsOfficial  =  "T"

eval_err_num:708
extra pred: SELECT country FROM competition GROUP BY country ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1

eval_err_num:709
extra pred: SELECT title FROM vocals WHERE TYPE = (SELECT avg(product_price) FROM products)
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1

eval_err_num:710
extra pred: SELECT title FROM vocals WHERE first_name = "orange" GROUP BY title ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1

eval_err_num:711
extra pred: SELECT title FROM item ORDER BY birth_date DESC LIMIT 1
extra gold: SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1

eval_err_num:712
easy pred: SELECT count(*) FROM country AS T1 JOIN songs AS T2 ON T1.songid = T2.country_id WHERE T2.name = "Billy to the Wall";
easy gold: SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch")

eval_err_num:713
easy pred: SELECT count(*) FROM constructors AS T1 JOIN people AS T2 ON T1.game_id = T2.id WHERE T2.name = "voluptatem"
easy gold: SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch")

eval_err_num:714
extra pred: SELECT T1.name FROM Person AS T1 JOIN people AS T2 ON T1.course_id = T2.course_id WHERE T2.name = "Monterey" AND T1.gender = 'Paid'
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French"

eval_err_num:715
extra pred: SELECT T1.name FROM mission AS T1 JOIN circuits AS T2 ON T1.f_id = T2.f_id WHERE T2.name = "United to the Wall";
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French"

eval_err_num:716
extra pred: SELECT region FROM medicine WHERE birth_country = "United Cameron" INTERSECT SELECT Nationality FROM county_public_safety WHERE YEAR = 2;
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  =  "T"

eval_err_num:717
extra pred: SELECT T1.Country_name FROM country AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id WHERE T2.name = "Forward" INTERSECT SELECT T1.Country_name FROM country AS T1 JOIN files AS T2 ON T1.f_id = T2.f_id WHERE T1.Country_name = "Indonesia"
extra gold: SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "French" AND T2.IsOfficial  =  "T"

eval_err_num:718
medium pred: SELECT count(DISTINCT title) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE TYPE = "shared"
medium gold: SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"

eval_err_num:719
medium pred: SELECT count(*) FROM department WHERE dept_name = "Fast Kitty Systems"
medium gold: SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Chinese"

eval_err_num:720
hard pred: SELECT region_name FROM region WHERE Appelation = "United CV"
hard gold: SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" OR T2.Language  =  "Dutch"

eval_err_num:721
hard pred: SELECT product_details FROM region WHERE region_name = "%Latte%"
hard gold: SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" OR T2.Language  =  "Dutch"

eval_err_num:722
extra pred: SELECT Official_native_language FROM competition WHERE country = "UK" OR country = "bangla"
extra gold: select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "english" and isofficial  =  "t" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  "dutch" and isofficial  =  "t"

eval_err_num:723
extra pred: SELECT country FROM competition WHERE competition_type = 'Friendly' OR country = "Almeida";
extra gold: SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND IsOfficial  =  "T" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "Dutch" AND IsOfficial  =  "T"

eval_err_num:724
extra pred: SELECT title FROM instructor WHERE name = "sesame" GROUP BY name ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1

eval_err_num:725
extra pred: SELECT t3.characteristic_name FROM albums AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE T2.staff_first_name = "Christop" GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  "Asia" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1

eval_err_num:726
hard pred: SELECT t3.characteristic_name FROM country AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE T1.country = "Demon POLLOCK'
hard gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY T2.Language HAVING COUNT(*)  =  1

eval_err_num:727
hard pred: SELECT t3.characteristic_name FROM country AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE T1.country = "Marianne"
hard gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  "Republic" GROUP BY T2.Language HAVING COUNT(*)  =  1

eval_err_num:728
extra pred: SELECT t3.headquartered_city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id GROUP BY T1.city_id ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" ORDER BY T1.Population DESC LIMIT 1

eval_err_num:729
extra pred: SELECT max(t2.active_to_date) FROM customers AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T1.first_name = 'LINDA' GROUP BY T1.city_id ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  "English" ORDER BY T1.Population DESC LIMIT 1

eval_err_num:730
hard pred: SELECT name , headquarter , country FROM airports ORDER BY Year_Join DESC LIMIT 1
hard gold: SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia" ORDER BY SurfaceArea DESC LIMIT 1

eval_err_num:731
hard pred: SELECT date , name , role_description FROM manufacturers WHERE name = 'Cytosol'
hard gold: SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  "Asia" ORDER BY SurfaceArea DESC LIMIT 1

eval_err_num:732
extra pred: SELECT avg(active_to_date - T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id WHERE T2.genre_is != "pop"
extra gold: SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")

eval_err_num:733
extra pred: SELECT avg(active_to_date FROM country AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id WHERE T1.duration != "pop"
extra gold: SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English" AND T2.IsOfficial  =  "T")

eval_err_num:734
extra pred: SELECT count(*) FROM people WHERE Nationality != 'Hartford'
extra gold: SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")

eval_err_num:735
extra pred: SELECT count(*) FROM country WHERE country_id NOT IN ( SELECT country_id FROM roller_coaster WHERE country = 'Canada') )
extra gold: SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  "English")

eval_err_num:736
medium pred: SELECT T1.Official_native_language FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T1.Capital = "Maryland"
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T"

eval_err_num:737
medium pred: SELECT T1.Official_native_language FROM country AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id WHERE T2.Country = "Maryland"
medium gold: SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  "Beatrix" AND T2.IsOfficial  =  "T"

eval_err_num:738
medium pred: SELECT count(DISTINCT T1.Official_native_language) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T1.Capital < 50000
medium gold: SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  "T"

eval_err_num:739
medium pred: SELECT count(DISTINCT nationality) FROM university
medium gold: SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  "T"

eval_err_num:740
hard pred: SELECT country FROM airports WHERE regional_population > (SELECT min(min_dew_point_f) FROM Albums WHERE country = 'Friendly'
hard gold: SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe")

eval_err_num:741
hard pred: SELECT country FROM airports WHERE elevation > (SELECT min(min_dew_point_f) FROM county_public_safety WHERE country = 'Greenland'
hard gold: SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  "Europe")

eval_err_num:742
extra pred: SELECT Competition_type FROM country WHERE Population < (SELECT avg(height) FROM people) WHERE state = 94107)
extra gold: SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  "Asia")

eval_err_num:743
extra pred: SELECT title FROM country WHERE elevation < (SELECT min(min_dew_point_f) FROM vocals WHERE country = 94107)
extra gold: SELECT Name FROM country WHERE Continent  =  "Africa"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  "Asia")

eval_err_num:744
extra pred: SELECT Appelation FROM country WHERE Population > (SELECT avg(city_area) FROM district)
extra gold: SELECT Name FROM country WHERE Continent  =  "Asia"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  "Africa")

eval_err_num:745
extra pred: SELECT Competition_type FROM country WHERE Population > (SELECT avg(city_area) FROM district)
extra gold: SELECT Name FROM country WHERE Continent  =  "Asia"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  "Africa")

eval_err_num:746
hard pred: SELECT Official_native_language FROM country WHERE Country != "Village"
hard gold: SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"

eval_err_num:747
hard pred: SELECT Official_native_language FROM country WHERE Country != "Village"
hard gold: SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"

eval_err_num:748
easy pred: SELECT country_id FROM competition WHERE resolution > 500
easy gold: SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != "English"

eval_err_num:749
easy pred: SELECT country FROM competition WHERE competition_type = 'Friendly' AND country != 'Iceland'
easy gold: SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != "English"

eval_err_num:750
hard pred: SELECT count(*) FROM routes WHERE billing_city = "Punk" EXCEPT SELECT Account_details FROM status WHERE languages = 'Tournament'
hard gold: SELECT Code FROM country WHERE GovernmentForm != "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"

eval_err_num:751
hard pred: SELECT COUNT(*) FROM country WHERE country_id != country_id
hard gold: SELECT Code FROM country WHERE GovernmentForm != "Republic" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  "English"

eval_err_num:752
extra pred: SELECT title FROM course WHERE course_id NOT IN (SELECT station_id FROM farm_competition)
extra gold: SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')

eval_err_num:753
extra pred: SELECT title FROM city WHERE Status != 'Cash'
extra gold: SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')

eval_err_num:754
hard pred: SELECT DISTINCT T1.city FROM addresses AS T1 JOIN country AS T2 ON T1.city_id = T2.city_id WHERE T1.Country_name = "Maryland"
hard gold: select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  "asia"

eval_err_num:755
hard pred: SELECT DISTINCT city FROM addresses WHERE city = 'United States'
hard gold: SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  "Asia"

eval_err_num:756
medium pred: SELECT name , dates_active , number_deaths FROM country ORDER BY Year_Join LIMIT 1
medium gold: SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1

eval_err_num:757
medium pred: SELECT country , headquarter , country FROM competition ORDER BY Year_Join LIMIT 1
medium gold: SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1

eval_err_num:758
medium pred: SELECT name , chromosome , country FROM competition ORDER BY Year_Join DESC LIMIT 1
medium gold: SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1

eval_err_num:759
medium pred: SELECT name , headquarter , founder FROM country ORDER BY revenue DESC LIMIT 1
medium gold: SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1

eval_err_num:760
medium pred: SELECT T1.name , T1.country FROM country AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY T2.country_id HAVING count(*) >= 3
medium gold: SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2

eval_err_num:761
medium pred: SELECT count(*) , formats FROM files GROUP BY country HAVING count(*) > 2
medium gold: SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2

eval_err_num:762
extra pred: SELECT count(*) , city FROM district WHERE City_Population > (SELECT avg(city_area) FROM district) GROUP BY district
extra gold: SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District

eval_err_num:763
extra pred: SELECT count(*) , city FROM district WHERE City_Population > (SELECT avg(city_area) FROM district)
extra gold: SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District

eval_err_num:764
medium pred: SELECT T1.Char_cells , T1.Pixels , T1.CheckIn FROM student AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.subject_id WHERE Budgeted > 6000 GROUP BY T1.name
medium gold: SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72

eval_err_num:765
medium pred: SELECT DISTINCT sum(city_population) FROM WINE WHERE Amount_Settled > 93
medium gold: SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72

eval_err_num:766
medium pred: SELECT avg(T2.fastestlapspeed) , min(Population) FROM student WHERE Votes < (SELECT avg(age) FROM student)
medium gold: SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72

eval_err_num:767
medium pred: SELECT DISTINCT T1.name , avg(trust) FROM products AS T1 JOIN checking AS T2 ON T1.people_id = T2.track_id GROUP BY T2.id HAVING count(*) = 1
medium gold: SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72

eval_err_num:768
medium pred: SELECT name , LOCATION FROM country ORDER BY elevation DESC LIMIT 5
medium gold: SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5

eval_err_num:769
medium pred: SELECT name , Num_of_Component FROM races ORDER BY market_rate DESC LIMIT 5
medium gold: SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5

eval_err_num:770
medium pred: SELECT Name FROM country ORDER BY White DESC LIMIT 3
medium gold: SELECT Name FROM country ORDER BY Population DESC LIMIT 3

eval_err_num:771
medium pred: SELECT T1.name FROM accounts AS T1 JOIN routes AS T2 ON T1.id = T2.game_id GROUP BY T2.s_id ORDER BY count(*) DESC LIMIT 3
medium gold: SELECT Name FROM country ORDER BY Population DESC LIMIT 3

eval_err_num:772
medium pred: SELECT t1.name FROM people AS T1 JOIN region AS T2 ON T1.Ship_ID = T2.Ship_ID ORDER BY votes LIMIT 3
medium gold: SELECT Name FROM country ORDER BY Population ASC LIMIT 3

eval_err_num:773
medium pred: SELECT billing_country FROM competition ORDER BY White ASC LIMIT 3
medium gold: SELECT Name FROM country ORDER BY Population ASC LIMIT 3

eval_err_num:774
easy pred: SELECT count(*) FROM country AS T1 JOIN country AS T2 ON T1.country_id = T2.country_id WHERE T2.country = "Defender"
easy gold: SELECT count(*) FROM country WHERE continent  =  "Asia"

eval_err_num:775
easy pred: SELECT count(*) FROM country AS T1 JOIN country AS T2 ON T1.country_id = T2.country_id WHERE T2.country = "Defender"
easy gold: SELECT count(*) FROM country WHERE continent  =  "Asia"

eval_err_num:776
medium pred: SELECT billing_country , City_Population FROM country WHERE Country = "German"
medium gold: SELECT Name FROM country WHERE continent  =  "Europe" AND Population  =  "80000"

eval_err_num:777
medium pred: SELECT T1.Name FROM country AS T1 JOIN hosting_city AS T2 ON T1.Country_id = T2.Country WHERE T1.country = "Forward" INTERSECT SELECT T1.Country_name FROM country AS T1 JOIN party_events AS T2 ON T1.region_id = T2.Country WHERE T1.Country_name = "Defender"
medium gold: SELECT Name FROM country WHERE continent  =  "Europe" AND Population  =  "80000"

eval_err_num:778
hard pred: SELECT avg(T2.Number_cities) , max(damage_millions_USD) FROM weekly_weather AS T1 JOIN affected_region AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = "Central Coast"
hard gold: select sum(population) ,  avg(surfacearea) from country where continent  =  "north america" and surfacearea  >  3000

eval_err_num:779
hard pred: SELECT country , average_attendance FROM weather WHERE country = 'United States' GROUP BY country HAVING count(*) > 1
hard gold: select sum(population) ,  avg(surfacearea) from country where continent  =  "north america" and surfacearea  >  3000

eval_err_num:780
easy pred: SELECT town_city FROM addresses WHERE city_code = "Good States'
easy gold: SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000

eval_err_num:781
easy pred: SELECT town_city FROM county_public_safety WHERE city_code = "East" AND Population BETWEEN 50 AND 1500
easy gold: select name from city where population between 160000 and 900000

eval_err_num:782
hard pred: SELECT T2.name FROM genres AS T1 JOIN songs AS T2 ON T1.f_id = T2.f_id GROUP BY T1.artist_id ORDER BY count(*) DESC LIMIT 1
hard gold: SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1

eval_err_num:783
hard pred: SELECT languages FROM song WHERE competition_type = 'R' GROUP BY languages ORDER BY count(*) DESC LIMIT 1
hard gold: SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1

eval_err_num:784
medium pred: SELECT avg(rating) , COUNT(*) FROM actor GROUP BY country
medium gold: SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode

eval_err_num:785
medium pred: SELECT country_id , project_details FROM people GROUP BY country_id ORDER BY count(*) DESC LIMIT 1
medium gold: SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode

eval_err_num:786
extra pred: SELECT Country FROM people WHERE Country = "Defender"
extra gold: SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode

eval_err_num:787
extra pred: SELECT count(*) FROM products WHERE country = "Fast Kitty online Shark";
extra gold: SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode

eval_err_num:788
medium pred: SELECT Country FROM mountain WHERE Country = "German"
medium gold: SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode

eval_err_num:789
medium pred: SELECT * FROM products WHERE country = "Fast Kitty Rag"
medium gold: SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  "Spanish" GROUP BY CountryCode

eval_err_num:790
easy pred: SELECT count(*) FROM papers
easy gold: SELECT count(*) FROM conductor

eval_err_num:791
easy pred: SELECT count(*) FROM papers
easy gold: SELECT count(*) FROM conductor

eval_err_num:792
easy pred: SELECT name FROM playlists; ORDER BY date
easy gold: SELECT Name FROM conductor ORDER BY Age ASC

eval_err_num:793
easy pred: SELECT name FROM playlists; ORDER BY name
easy gold: SELECT Name FROM conductor ORDER BY Age ASC

eval_err_num:794
easy pred: SELECT Name FROM people WHERE Nationality != "United States"
easy gold: SELECT Name FROM conductor WHERE Nationality != 'USA'

eval_err_num:795
easy pred: SELECT Name FROM mountain WHERE Nationality != "German"
easy gold: SELECT Name FROM conductor WHERE Nationality != 'USA'

eval_err_num:796
easy pred: SELECT company FROM Companies ORDER BY price DESC
easy gold: SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC

eval_err_num:797
easy pred: SELECT Company FROM Companies ORDER BY Money_Requested DESC
easy gold: SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC

eval_err_num:798
easy pred: SELECT avg(Quantity) FROM TRACK
easy gold: SELECT avg(Attendance) FROM SHOW

eval_err_num:799
easy pred: SELECT avg(Gross_in_dollar) FROM film
easy gold: SELECT avg(Attendance) FROM SHOW

eval_err_num:800
medium pred: SELECT max(T1.duration) , min(Sales_billion) FROM performance WHERE transaction_type_code = 'London'
medium gold: SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != "Live final"

eval_err_num:801
medium pred: SELECT max(T1.duration) , max(membership_amount) FROM performance WHERE Airport_Name != 'London'
medium gold: SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != "Live final"

eval_err_num:802
easy pred: SELECT count(DISTINCT Party) FROM swimmer
easy gold: SELECT count(DISTINCT Nationality) FROM conductor

eval_err_num:803
easy pred: SELECT count(DISTINCT Party) FROM people
easy gold: SELECT count(DISTINCT Nationality) FROM conductor

eval_err_num:804
easy pred: SELECT name FROM playlists; ORDER BY followers DESC
easy gold: SELECT Name FROM conductor ORDER BY Year_of_Work DESC

eval_err_num:805
easy pred: SELECT name FROM playlists; ORDER BY YEAR DESC
easy gold: SELECT Name FROM conductor ORDER BY Year_of_Work DESC

eval_err_num:806
medium pred: SELECT title FROM playlists; WHERE YEAR = (SELECT max(YEAR) FROM Movie)
medium gold: SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1

eval_err_num:807
medium pred: SELECT T1.title FROM actor AS T1 JOIN LANGUAGE AS T2 ON T1.language_id = T2.staff_id GROUP BY T2.staff_id ORDER BY count(*) DESC LIMIT 1
medium gold: SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1

eval_err_num:808
medium pred: SELECT T1.name FROM debate_people AS T1 JOIN people AS T2 ON T1.Negative = T2.id WHERE T1.Name = "Latin"
medium gold: SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID

eval_err_num:809
medium pred: SELECT T2.song_name FROM albums AS T1 JOIN people AS T2 ON T1.i_id = T2.id WHERE T1.name = "Balls to the Wall";
medium gold: SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID

eval_err_num:810
medium pred: SELECT title FROM people WHERE name LIKE "%ALA%" GROUP BY name HAVING count(*) > 1
medium gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1

eval_err_num:811
medium pred: SELECT title FROM playlists; GROUP BY name HAVING count(*) > 1
medium gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1

eval_err_num:812
extra pred: SELECT T1.title FROM products AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id = T2.game_id WHERE T2.outcome_code = "Balls to the Wall";
extra gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1

eval_err_num:813
extra pred: SELECT title FROM albums WHERE title = "Fast As a Shark";
extra gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1

eval_err_num:814
medium pred: SELECT Name FROM mill WHERE document_name > 1000
medium gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008

eval_err_num:815
medium pred: SELECT name FROM playlists; WHERE YEAR > 6000 AND YEAR = 600;
medium gold: SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008

eval_err_num:816
medium pred: SELECT main_industry , COUNT(*) FROM company GROUP BY main_industry
medium gold: SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company

eval_err_num:817
medium pred: SELECT count(*) FROM Companies
medium gold: SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company

eval_err_num:818
medium pred: SELECT RESULT FROM TRACK GROUP BY RESULT ORDER BY COUNT(*) ASC
medium gold: SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC

eval_err_num:819
medium pred: SELECT Competition_type FROM volume ORDER BY image_name
medium gold: SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC

eval_err_num:820
hard pred: SELECT Company_name FROM Companies GROUP BY Company_name ORDER BY count(*) DESC LIMIT 1
hard gold: SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1

eval_err_num:821
hard pred: SELECT main_industry FROM airlines GROUP BY main_industry ORDER BY count(*) DESC LIMIT 1
hard gold: SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1

eval_err_num:822
hard pred: SELECT Name FROM playlists; WHERE Code NOT IN (SELECT Artwork_ID FROM review)
hard gold: SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)

eval_err_num:823
hard pred: SELECT name FROM playlists; EXCEPT SELECT T2.first_name FROM Lessons AS T1 JOIN Accounts AS T2 ON T1.Grape = T2.rID
hard gold: SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)

eval_err_num:824
hard pred: SELECT Carrier FROM company WHERE founded < 2000 INTERSECT SELECT Carrier FROM company WHERE Money_Requested > 64
hard gold: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003

eval_err_num:825
hard pred: SELECT main_industry FROM university WHERE founded < 1990 INTERSECT SELECT Company FROM mill WHERE founded > 7
hard gold: SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003

eval_err_num:826
medium pred: SELECT count(*) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id WHERE T2.genre_is = "Balls to the Wall";
medium gold: SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"

eval_err_num:827
medium pred: SELECT count(*) , city FROM customers WHERE title = 'IT Failure" OR first_name = "CA";
medium gold: SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  "CD" OR Major_Record_Format  =  "DVD"

eval_err_num:828
medium pred: SELECT date_of_latest_revision FROM job_history GROUP BY YEAR HAVING COUNT(*) > 1
medium gold: SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1

eval_err_num:829
medium pred: SELECT sum(Domestic_Passengers) FROM artist WHERE founded > (SELECT min(resolution) FROM university)
medium gold: SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1

eval_err_num:830
easy pred: SELECT count(*) FROM farm
easy gold: SELECT count(*) FROM Highschooler

eval_err_num:831
easy pred: SELECT count(*) FROM farm
easy gold: SELECT count(*) FROM Highschooler

eval_err_num:832
medium pred: SELECT name , CLASS FROM captain
medium gold: SELECT name ,  grade FROM Highschooler

eval_err_num:833
medium pred: SELECT T1.name , T2.position FROM race AS T1 JOIN CLASS AS T2 ON T1.crs_code = T2.track_id
medium gold: SELECT name ,  grade FROM Highschooler

eval_err_num:834
easy pred: SELECT DISTINCT T3.Fname FROM campuses AS T1 JOIN CLASS AS T2 ON T1.School_ID = T2.School_ID
easy gold: SELECT grade FROM Highschooler

eval_err_num:835
easy pred: SELECT DISTINCT firstname FROM list
easy gold: SELECT grade FROM Highschooler

eval_err_num:836
easy pred: SELECT DISTINCT grade FROM list WHERE grade = 4
easy gold: SELECT grade FROM Highschooler WHERE name  =  "Kyle"

eval_err_num:837
easy pred: SELECT DISTINCT classroom FROM list WHERE grade = 4
easy gold: SELECT grade FROM Highschooler WHERE name  =  "Kyle"

eval_err_num:838
easy pred: SELECT DISTINCT firstname FROM Rooms WHERE YEAR = 2008
easy gold: SELECT name FROM Highschooler WHERE grade  =  10

eval_err_num:839
easy pred: SELECT DISTINCT grade FROM takes WHERE grade = 2008
easy gold: SELECT name FROM Highschooler WHERE grade  =  10

eval_err_num:840
easy pred: SELECT Elimination_Move FROM school_details WHERE County_name = "Team CV"
easy gold: SELECT ID FROM Highschooler WHERE name  =  "Kyle"

eval_err_num:841
easy pred: SELECT title FROM film WHERE name = "Astrid"
easy gold: SELECT ID FROM Highschooler WHERE name  =  "Kyle"

eval_err_num:842
medium pred: SELECT DISTINCT class_section) FROM list WHERE dept_name = 'Statistics' OR dept_name = "CHI"
medium gold: SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10

eval_err_num:843
medium pred: SELECT count(*) FROM postseason WHERE job = "ROY" AND YEAR = "SWEAZY";
medium gold: SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10

eval_err_num:844
medium pred: SELECT count(*) , Competition FROM station GROUP BY crs_code
medium gold: SELECT grade ,  count(*) FROM Highschooler GROUP BY grade

eval_err_num:845
medium pred: SELECT count(*) , T1.name FROM station AS T1 JOIN injury_accident AS T2 ON T1.id = T2.game_id GROUP BY T1.name;
medium gold: SELECT grade ,  count(*) FROM Highschooler GROUP BY grade

eval_err_num:846
hard pred: SELECT DISTINCT grade FROM list ORDER BY grade DESC LIMIT 1
hard gold: SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1

eval_err_num:847
hard pred: SELECT DISTINCT grade FROM list WHERE YEAR = (SELECT avg(capacity) FROM instructor)
hard gold: SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1

eval_err_num:848
easy pred: SELECT DISTINCT T3.Fname FROM list AS T1 JOIN GRADECONVERSION AS T2 ON T1.course_id = T2.department_id GROUP BY grade HAVING count(*) >= 4
easy gold: SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4

eval_err_num:849
easy pred: SELECT avg(T2.gradepoint) FROM player AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom GROUP BY T1.dept_code HAVING count(*) >= 4
easy gold: SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4

eval_err_num:850
medium pred: SELECT StuID , count(*) FROM Student GROUP BY StuID
medium gold: SELECT student_id ,  count(*) FROM Friend GROUP BY student_id

eval_err_num:851
medium pred: SELECT count(T2.friend) , count(*) FROM Student AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name GROUP BY T2.name
medium gold: SELECT student_id ,  count(*) FROM Friend GROUP BY student_id

eval_err_num:852
medium pred: SELECT T2.school_name , COUNT(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id JOIN player AS T3 ON T1.driver_id = T3.driver_id GROUP BY T2.school_name
medium gold: SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id

eval_err_num:853
medium pred: SELECT T2.name , count(*) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name ORDER BY T1.age ASC LIMIT 1
medium gold: SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id

eval_err_num:854
extra pred: SELECT T1.name FROM item AS T1 JOIN tracks AS T2 ON T1.i_id = T2.i_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:855
extra pred: SELECT cName FROM college ORDER BY enr DESC LIMIT 1
extra gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:856
medium pred: SELECT name FROM church WHERE YEAR >= 3
medium gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3

eval_err_num:857
medium pred: SELECT T1.name FROM Grapes AS T1 JOIN Rooms AS T2 ON T1.Wrestler_ID = T2.gameid GROUP BY T1.gameid HAVING count(*) >= 3
medium gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3

eval_err_num:858
hard pred: SELECT title FROM injury_accident WHERE director = "Los Cameron"
hard gold: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"

eval_err_num:859
hard pred: SELECT T2.name FROM college AS T1 JOIN tryout AS T2 ON T1.course_id = T2.course_id JOIN student AS T3 ON T2.pID = T3.pID WHERE T3.pName = 'Charles'
hard gold: SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  "Kyle"

eval_err_num:860
medium pred: SELECT count(T2.friend) FROM discipline_enrollments AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.family_name = 'yes'
medium gold: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"

eval_err_num:861
medium pred: SELECT count(T2.friend) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T1.name = 'Dan'
medium gold: SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"

eval_err_num:862
hard pred: SELECT StuID FROM Student EXCEPT SELECT StuID FROM Participates_in
hard gold: SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend

eval_err_num:863
hard pred: SELECT avg(Enrollment) FROM SECTION EXCEPT SELECT campus FROM takes
hard gold: SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend

eval_err_num:864
hard pred: SELECT school_name FROM school WHERE school_id NOT IN (SELECT school_id FROM endowment)
hard gold: SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id

eval_err_num:865
hard pred: SELECT name FROM student EXCEPT SELECT id FROM student
hard gold: SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id

eval_err_num:866
hard pred: SELECT transaction_id FROM PersonFriend WHERE name = "Los Angeles"
hard gold: SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes

eval_err_num:867
hard pred: SELECT StuID FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy = "Football" INTERSECT SELECT StuID FROM Has_allergy WHERE Allergy = "Cat")
hard gold: SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes

eval_err_num:868
hard pred: SELECT T1.stu_fname FROM advisor AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.pID WHERE T2.decision = 'yes' AND T2.pPos = 'striker'
hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id

eval_err_num:869
hard pred: SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T2.name = 'Boston Labs' INTERSECT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Alice'
hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id

eval_err_num:870
medium pred: SELECT count(*) , student_id FROM student GROUP BY dept_code
medium gold: SELECT student_id ,  count(*) FROM Likes GROUP BY student_id

eval_err_num:871
medium pred: SELECT T1.student_id , count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id
medium gold: SELECT student_id ,  count(*) FROM Likes GROUP BY student_id

eval_err_num:872
medium pred: SELECT date_of_transaction , count(*) FROM debate_people WHERE bedtype = "SALE"
medium gold: SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id

eval_err_num:873
medium pred: SELECT count(*) , T1.name FROM medication AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.game_id WHERE T1.name = "Spain"
medium gold: SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id

eval_err_num:874
extra pred: SELECT T1.name FROM item AS T1 JOIN tracks AS T2 ON T1.i_id = T2.i_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:875
extra pred: SELECT T1.name FROM student AS T1 JOIN course AS T2 ON T1.course_id = T2.course_id GROUP BY T2.s_id ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:876
medium pred: SELECT T1.name FROM student AS T1 JOIN advisor AS T2 ON T1.id = T2.s_id GROUP BY T2.s_id HAVING count(*) >= 2
medium gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2

eval_err_num:877
medium pred: SELECT T1.name FROM student AS T1 JOIN advisor AS T2 ON T1.id = T2.s_id GROUP BY T2.s_id HAVING count(*) >= 2
medium gold: SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2

eval_err_num:878
hard pred: SELECT T1.stu_fname FROM student AS T1 JOIN takes AS T2 ON T1.id = T2.id WHERE enroll_grade > 5 GROUP BY T2.pPos HAVING count(*) >= 2
hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2

eval_err_num:879
hard pred: SELECT CName FROM Rooms WHERE Credits > 5 UNION SELECT CName FROM Rooms GROUP BY YEAR; HAVING count(*) >= 2
hard gold: SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2

eval_err_num:880
medium pred: SELECT count(*) FROM tracks WHERE dept_name = "Fast Info. Systems"
medium gold: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"

eval_err_num:881
medium pred: SELECT count(*) FROM item WHERE name = "Fast As a Shark";
medium gold: SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  "Kyle"

eval_err_num:882
hard pred: SELECT avg(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade = T2.lettergrade AND T1.StuID = T3.StuID WHERE T3.city_code = "Smith"
hard gold: SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)

eval_err_num:883
hard pred: SELECT avg(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade = T2.lettergrade AND T1.StuID = T3.StuID WHERE T3.city_code = "Smith"
hard gold: SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)

eval_err_num:884
extra pred: SELECT max(Age) FROM STUDENT WHERE class_room = "Pass"
extra gold: SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)

eval_err_num:885
extra pred: SELECT max(gradepoint) FROM classroom WHERE grade NOT IN (SELECT station_id FROM student_course_attendance)
extra gold: SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)

eval_err_num:886
hard pred: SELECT T1.state FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T1.state_province_county = 'Success' INTERSECT SELECT T1.state FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T1.state_province_county = "Defender"
hard gold: SELECT state FROM Owners INTERSECT SELECT state FROM Professionals

eval_err_num:887
hard pred: SELECT T1.state FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T1.state_province_county = 'Success' INTERSECT SELECT T1.state FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T1.state_province_county = "CA"
hard gold: SELECT state FROM Owners INTERSECT SELECT state FROM Professionals

eval_err_num:888
hard pred: SELECT avg(age) FROM Person WHERE job = 'male'
hard gold: SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )

eval_err_num:889
hard pred: SELECT avg(age) FROM people WHERE job = "Fast As a Shark";
hard gold: SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )

eval_err_num:890
extra pred: SELECT email_address , GDP FROM addresses WHERE state = 255 OR age > 40
extra gold: SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2

eval_err_num:891
extra pred: SELECT T1.driverid , phone_number FROM user_profiles WHERE state = "Marina" OR zip_postcode > 2
extra gold: SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2

eval_err_num:892
hard pred: SELECT title FROM program WHERE cost > 1000
hard gold: select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )

eval_err_num:893
hard pred: SELECT name FROM procedures WHERE hours > 1000
hard gold: select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )

eval_err_num:894
hard pred: SELECT first_name FROM captain WHERE first_name = "Nancy" OR last_name != 'Beijing'
hard gold: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs

eval_err_num:895
hard pred: SELECT first_name FROM products WHERE first_name = 'Comp. States' OR department_id != '%edu%'
hard gold: SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs

eval_err_num:896
extra pred: SELECT head_id , role_name , Amount_Payment FROM Maintenance_Engineers WHERE personal_name = 'Armani'
extra gold: SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id

eval_err_num:897
extra pred: SELECT employee_name , role_code FROM problem_log WHERE Email LIKE 'Armani'
extra gold: SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id

eval_err_num:898
extra pred: SELECT T1.engineer_id , T1.first_name , T1.last_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Contracts AS T2 ON T1.company_id = T2.maintenance_contract_company_id GROUP BY T1.company_id ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:899
extra pred: SELECT T1.name , T2.film_id , T2.description FROM school_bus AS T1 JOIN Engineer_Skills AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:900
medium pred: SELECT T1.engineer_id , T1.first_name , T1.last_name FROM Reservations AS T1 JOIN Engineer_Visits AS T2 ON T1.Room = T2.RoomId GROUP BY T1.engineer_id HAVING count(*) >= 2
medium gold: SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2

eval_err_num:901
medium pred: SELECT T3.title , T1.course_description , T2.description FROM Performance AS T1 JOIN Subjects AS T2 ON T1.bandmate = T2.id JOIN Songs AS T3 ON T3.SongId = T1.SongId GROUP BY T2.course_id HAVING count(*) >= 2
medium gold: SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2

eval_err_num:902
extra pred: SELECT title FROM albums WHERE name = "Fast As Rating" GROUP BY advisor ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1

eval_err_num:903
extra pred: SELECT title FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid GROUP BY T2.film_id ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1

eval_err_num:904
extra pred: SELECT part_id , rental_rate FROM employees WHERE rental_rate = 'Visa' GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:905
extra pred: SELECT T1.asset_id , T1.company_name FROM Third_Party_Companies AS T1 JOIN Rooms AS T2 ON T1.company_id = T2.address_id WHERE T2.last_name = "US 102'
extra gold: SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1

eval_err_num:906
extra pred: SELECT role_description FROM claims_processing_stages GROUP BY Policy_Type_Code ORDER BY count(*) ASC LIMIT 1
extra gold: SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1

eval_err_num:907
extra pred: SELECT role_description FROM claims_processing_stages WHERE claim_status_name = "Open"
extra gold: SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1

eval_err_num:908
extra pred: SELECT part_id , rental_rate FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1

eval_err_num:909
extra pred: SELECT channel_code , T1.zip_postcode FROM weekly_weather AS T1 JOIN Parking_Fines AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id WHERE T1.detention_type_code = "AFTER" GROUP BY T2.address_id ORDER BY count(*) DESC LIMIT 1
extra gold: SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1

eval_err_num:910
medium pred: SELECT T1.student_id , T1.partitionid FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.uid = T2.part_id GROUP BY T1.fault_log_entry_id HAVING count(*) >= 2
medium gold: SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2

eval_err_num:911
medium pred: SELECT problem_log_id , log_entry_date FROM problem_log GROUP BY problem_id HAVING count(*) >= 2
medium gold: SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2

eval_err_num:912
extra pred: SELECT name , duration FROM employees WHERE weight < (SELECT min(min_dew_point_f) FROM student)
extra gold: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )

eval_err_num:913
extra pred: SELECT first_name , last_name FROM customers WHERE max_temperature_f < 700
extra gold: SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )

eval_err_num:914
medium pred: SELECT Date , surname FROM employees WHERE first_name = "Marina"
medium gold: SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id

eval_err_num:915
medium pred: SELECT Date , premise_details FROM problem_log ORDER BY max_speed ASC LIMIT 1
medium gold: SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id

eval_err_num:916
medium pred: SELECT interaction_type , count(*) FROM Rooms GROUP BY payment_method_code;
medium gold: SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code

eval_err_num:917
medium pred: SELECT premises_type , password FROM premises
medium gold: SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code

eval_err_num:918
medium pred: SELECT individual_first_name , Lname , payment_method_code FROM Orders WHERE employee_Name = 'Armani'
medium gold: SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id

eval_err_num:919
medium pred: SELECT T3.name , T3.balance , T2.customer_phone FROM products AS T1 JOIN invoices AS T2 ON T1.customer_id = T2.customer_id
medium gold: SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id

eval_err_num:920
medium pred: SELECT T1.duration , image_url FROM images
medium gold: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id

eval_err_num:921
medium pred: SELECT Hardware_Model_name , individual_middle_name FROM products WHERE document_name = "LG-P760";
medium gold: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id

eval_err_num:922
extra pred: SELECT T1.Service_Type_Description , T2.Service_Type_Code , Amount_Payment FROM individuals
extra gold: SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )

eval_err_num:923
extra pred: SELECT T1.Char_cells , image_url , T2.description FROM Person
extra gold: SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )

eval_err_num:924
medium pred: SELECT title , Company_name FROM PersonFriend WHERE name = "Marina"
medium gold: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'

eval_err_num:925
medium pred: SELECT firstname FROM CUSTOMER WHERE City = "luisg@embraer.com.br"
medium gold: SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'

eval_err_num:926
medium pred: SELECT title FROM procedures WHERE title = "Astrid" AND last_name = "Gruber";
medium gold: SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id

eval_err_num:927
medium pred: SELECT T1.Char_cells , T1.Pixels , Amount_Payment FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id
medium gold: SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id

eval_err_num:928
extra pred: SELECT name FROM Movie WHERE name = 'James FIFA a Cup qualification"
extra gold: SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )

eval_err_num:929
extra pred: SELECT T1.company_name FROM customers AS t1 JOIN candidate AS t2 ON t1.customer_id = t2.customer_id ORDER BY t2.date_complaint_raised LIMIT 1
extra gold: SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )

eval_err_num:930
medium pred: SELECT email FROM customers WHERE state = "Roberto" AND last_name = "Gruber";
medium gold: SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'

eval_err_num:931
medium pred: SELECT email FROM customers WHERE state = "Roberto" OR state = "Langosh"
medium gold: SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'

eval_err_num:932
medium pred: SELECT T1.Char_cells , MIN(cost) , AVG(cost) FROM images
medium gold: SELECT date_arrived ,  date_departed FROM Dogs

eval_err_num:933
medium pred: SELECT T2.day_Number , T1.Date_Stored FROM Residents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored = T2.calendar_date
medium gold: SELECT date_arrived ,  date_departed FROM Dogs

eval_err_num:934
easy pred: SELECT count(*) FROM customers WHERE title = "Fast As a Shark";
easy gold: SELECT count(DISTINCT dog_id) FROM Treatments

eval_err_num:935
easy pred: SELECT count(*) FROM customers WHERE title = "Fast Info. a Shark";
easy gold: SELECT count(DISTINCT dog_id) FROM Treatments

eval_err_num:936
easy pred: SELECT count(*) FROM Fault_Log AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id WHERE T2.name = "Ray"
easy gold: SELECT count(DISTINCT professional_id) FROM Treatments

eval_err_num:937
easy pred: SELECT count(*) FROM item WHERE name = "flax"
easy gold: SELECT count(DISTINCT professional_id) FROM Treatments

eval_err_num:938
medium pred: SELECT title , GDP FROM city WHERE city LIKE "%Alex%"
medium gold: SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'

eval_err_num:939
medium pred: SELECT T1.Char_cells , T1.dept_code , address FROM address WHERE city LIKE '%m'
medium gold: SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'

eval_err_num:940
medium pred: SELECT open_year , first_name , last_name FROM addresses WHERE zip_postcode LIKE "%Alex%"
medium gold: SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'

eval_err_num:941
medium pred: SELECT email_address , first_name , last_name FROM Customers; WHERE zip_postcode LIKE '%m'
medium gold: SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'

eval_err_num:942
hard pred: SELECT count(*) FROM files WHERE age < (SELECT avg(age) FROM student)
hard gold: SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )

eval_err_num:943
hard pred: SELECT count(*) FROM Person WHERE age < (SELECT max(age) FROM person WHERE job = 'engineer')
hard gold: SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )

eval_err_num:944
medium pred: SELECT patient FROM stay WHERE user_login = (SELECT min(min_dew_point_f) FROM student)
medium gold: SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1

eval_err_num:945
medium pred: SELECT venue FROM festival_detail WHERE YEAR = (SELECT max(YEAR) FROM Movie)
medium gold: SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1

eval_err_num:946
extra pred: SELECT count(*) FROM item WHERE id NOT IN ( SELECT accelerator_id FROM tracks WHERE first_name = 'Canada')
extra gold: SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )

eval_err_num:947
extra pred: SELECT count(*) FROM item WHERE id NOT IN (SELECT T1.patient FROM Prescribes
extra gold: select count(*) from dogs where dog_id not in ( select dog_id from treatments )

eval_err_num:948
extra pred: SELECT count(*) FROM phone WHERE id NOT IN ( SELECT game_id FROM Prescribes )
extra gold: SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )

eval_err_num:949
extra pred: SELECT count(*) FROM team_franchise WHERE FirstName NOT IN (SELECT T1.id FROM protein)
extra gold: SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )

eval_err_num:950
extra pred: SELECT count(*) FROM albums WHERE SSN NOT IN (SELECT employee_id FROM complaints)
extra gold: SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )

eval_err_num:951
extra pred: SELECT count(*) FROM item WHERE forename NOT IN (SELECT apid FROM prereq AS T1 JOIN review AS T2 ON T1.end_station_id = T2.id WHERE T1.name = 'Differential Jackson'
extra gold: SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )

eval_err_num:952
medium pred: SELECT T1.Char_cells , T1.age , min(oppose_rate) FROM people AS T1 JOIN laptimes AS T2 ON T1.people_id = T2.people_id WHERE T2.interaction_type = 'inhibitor'
medium gold: SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1

eval_err_num:953
medium pred: SELECT AVG(Milliseconds) , T1.Pixels , min(oppose_rate) FROM architect AS T1 JOIN tracks AS T2 ON T1.city_id = T2.people_id WHERE T2.Birth_Date = 'inhibitor'
medium gold: SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1

eval_err_num:954
easy pred: SELECT avg(age) FROM Person
easy gold: SELECT avg(age) FROM Dogs

eval_err_num:955
easy pred: SELECT avg(age) FROM Person
easy gold: SELECT avg(age) FROM Dogs

eval_err_num:956
easy pred: SELECT Age FROM Person ORDER BY Age DESC LIMIT 1
easy gold: SELECT max(age) FROM Dogs

eval_err_num:957
easy pred: SELECT Age FROM people ORDER BY Age DESC LIMIT 1
easy gold: SELECT max(age) FROM Dogs

eval_err_num:958
medium pred: SELECT policy_type_code , count(*) FROM policies GROUP BY policy_type_code
medium gold: SELECT charge_type ,  charge_amount FROM Charges

eval_err_num:959
medium pred: SELECT policy_type_code , budget_type_description FROM policies
medium gold: SELECT charge_type ,  charge_amount FROM Charges

eval_err_num:960
easy pred: SELECT avg(product_price) FROM products WHERE product_type_code = 'Hardware' GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1
easy gold: SELECT max(charge_amount) FROM Charges

eval_err_num:961
easy pred: SELECT Product_Name FROM Products GROUP BY date_of_latest_revision ORDER BY count(*) DESC LIMIT 1
easy gold: SELECT max(charge_amount) FROM Charges

eval_err_num:962
medium pred: SELECT T1.Char_cells , T3.Type , email_address FROM customers WHERE Hardware_Model_name = "LG-P760";
medium gold: SELECT email_address ,  cell_number ,  home_phone FROM professionals

eval_err_num:963
medium pred: SELECT T1.Service_Type_Description , T3.Type , email_address FROM employees
medium gold: SELECT email_address ,  cell_number ,  home_phone FROM professionals

eval_err_num:964
medium pred: SELECT TYPE , document_type_name FROM premises
medium gold: SELECT DISTINCT breed_code ,  size_code FROM dogs

eval_err_num:965
medium pred: SELECT DISTINCT Product_Name , Product_Type_Code FROM enzyme WHERE TYPE = 'inhibitor'
medium gold: SELECT DISTINCT breed_code ,  size_code FROM dogs

eval_err_num:966
medium pred: SELECT T1.problem_description FROM Staff_Roles AS T1 JOIN Courses AS T2 ON T1.outcome_code = T2.outcome_code WHERE T2.first_name = "Fahey"
medium gold: SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code

eval_err_num:967
medium pred: SELECT characteristic_name , other_characteristic_details , characteristic_data_type FROM CHARACTERISTICS
medium gold: SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code

eval_err_num:968
easy pred: SELECT count(*) FROM artist
easy gold: SELECT count(*) FROM singer

eval_err_num:969
easy pred: SELECT count(*) FROM review
easy gold: SELECT count(*) FROM singer

eval_err_num:970
easy pred: SELECT Name FROM artist ORDER BY Name ASC
easy gold: SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC

eval_err_num:971
easy pred: SELECT Name FROM artist ORDER BY Name ASC
easy gold: SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC

eval_err_num:972
medium pred: SELECT T2.day_Number , date_incident_end FROM INVOICES AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID
medium gold: SELECT Birth_Year ,  Citizenship FROM singer

eval_err_num:973
medium pred: SELECT T2.day_Number , date_incident_end FROM mailshot_customers
medium gold: SELECT Birth_Year ,  Citizenship FROM singer

eval_err_num:974
easy pred: SELECT Name FROM artist WHERE genre_is LIKE "%a%"
easy gold: SELECT Name FROM singer WHERE Citizenship != "France"

eval_err_num:975
easy pred: SELECT Name FROM ARTIST WHERE Name != "%a%"
easy gold: SELECT Name FROM singer WHERE Citizenship != "France"

eval_err_num:976
medium pred: SELECT Name FROM artist WHERE Age = "United States" OR languages = "english"
medium gold: SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949

eval_err_num:977
medium pred: SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = "UK" OR T1.gender = "english"
medium gold: SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949

eval_err_num:978
medium pred: SELECT title FROM albums WHERE name = "Fast As a Shark";
medium gold: SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1

eval_err_num:979
medium pred: SELECT title FROM albums WHERE name = "Fast As a Shark";
medium gold: SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1

eval_err_num:980
medium pred: SELECT T1.Title , COUNT(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name GROUP BY T2.artist_name
medium gold: SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship

eval_err_num:981
medium pred: SELECT Country , COUNT(*) FROM artist GROUP BY Country
medium gold: SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship

eval_err_num:982
hard pred: SELECT Memory_in_G FROM products GROUP BY Range ORDER BY COUNT(*) DESC LIMIT 1
hard gold: SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1

eval_err_num:983
hard pred: SELECT title FROM vocals GROUP BY title ORDER BY count(*) DESC LIMIT 1
hard gold: select citizenship from singer group by citizenship order by count(*) desc limit 1

eval_err_num:984
medium pred: SELECT TYPE , name FROM artist GROUP BY TYPE
medium gold: SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship

eval_err_num:985
medium pred: SELECT f_id FROM products GROUP BY languages
medium gold: SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship

eval_err_num:986
medium pred: SELECT title , rating FROM film WHERE TYPE = 'R'
medium gold: SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID

eval_err_num:987
medium pred: SELECT title , title FROM vocals AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = "Le Pop"
medium gold: SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID

eval_err_num:988
medium pred: SELECT DISTINCT artist_name FROM artist WHERE Weeks_on_Top > (SELECT min(resolution) FROM exhibition)
medium gold: SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000

eval_err_num:989
medium pred: SELECT DISTINCT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.hours > 9
medium gold: SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000

eval_err_num:990
medium pred: SELECT T2.Name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name GROUP BY T2.artist_name HAVING COUNT(*) > 1
medium gold: SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1

eval_err_num:991
medium pred: SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name GROUP BY T2.artist_name HAVING count(*) > 1
medium gold: SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1

eval_err_num:992
medium pred: SELECT T2.Name , sum(T1.Num_of_stock) FROM artist AS T1 JOIN round AS T2 ON T1.artist_name = T2.artist_name GROUP BY T2.artist_name
medium gold: SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name

eval_err_num:993
medium pred: SELECT sum(revenue) , founder FROM manufacturers GROUP BY name
medium gold: SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name

eval_err_num:994
hard pred: SELECT Name FROM artist WHERE Artist_ID NOT IN (SELECT People_ID FROM volume)
hard gold: SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)

eval_err_num:995
hard pred: SELECT title FROM albums; WHERE course_id NOT IN (SELECT i_id FROM Engineer_Visits)
hard gold: SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)

eval_err_num:996
hard pred: SELECT T2.theme FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.Weeks_on_Top < T2.Jul
hard gold: SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955

eval_err_num:997
hard pred: SELECT artist_name FROM artist WHERE rating < "1989-09-03" INTERSECT SELECT Appelation FROM song WHERE rating > 1900
hard gold: SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955

eval_err_num:998
easy pred: SELECT count(*) FROM services
easy gold: SELECT count(*) FROM Other_Available_Features

eval_err_num:999
medium pred: SELECT ResTypeDescription FROM film WHERE TYPE = "Chocolate"
medium gold: SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  "AirCon"

eval_err_num:1000
medium pred: SELECT T1.transaction_type_description FROM All_documents AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.document_id WHERE T1.document_name = "Robin CV"
medium gold: SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code

eval_err_num:1001
hard pred: SELECT dorm_name FROM people WHERE Residence = "mp4" OR Residence > 1000
hard gold: SELECT property_name FROM Properties WHERE property_type_code  =  "House" UNION SELECT property_name FROM Properties WHERE property_type_code  =  "Apartment" AND room_count  >  1

                     easy                 medium               hard                 extra                all
count                248                  446                  174                  166                  1034
=====================   EXECUTION ACCURACY     =====================
execution            0.020                0.007                0.011                0.000                0.010

====================== EXACT MATCHING ACCURACY =====================
exact match          0.032                0.004                0.011                0.000                0.012

---------------------PARTIAL MATCHING ACCURACY----------------------
select               1.000                0.643                1.000                1.000                0.848
select(no AGG)       1.000                0.643                1.000                1.000                0.848
where                1.000                0.429                0.000                0.000                0.462
where(no OP)         1.000                0.429                0.000                0.000                0.462
group(no Having)     1.000                0.333                1.000                1.000                0.818
group                1.000                0.333                1.000                1.000                0.818
order                0.000                0.000                0.667                1.000                0.571
and/or               1.000                0.899                0.897                0.880                0.920
IUEN                 0.000                0.000                0.000                0.000                0.000
keywords             1.000                0.917                0.600                0.667                0.852
---------------------- PARTIAL MATCHING RECALL ----------------------
select               0.044                0.020                0.029                0.018                0.027
select(no AGG)       0.044                0.020                0.029                0.018                0.027
where                0.028                0.016                0.000                0.000                0.013
where(no OP)         0.028                0.016                0.000                0.000                0.013
group(no Having)     0.200                0.008                0.051                0.025                0.033
group                0.200                0.008                0.051                0.025                0.033
order                0.000                0.000                0.036                0.025                0.017
and/or               1.000                1.000                1.000                1.000                1.000
IUEN                 0.000                0.000                0.000                0.000                0.000
keywords             0.047                0.029                0.017                0.012                0.026
---------------------- PARTIAL MATCHING F1 --------------------------
select               0.085                0.039                0.056                0.036                0.052
select(no AGG)       0.085                0.039                0.056                0.036                0.052
where                0.054                0.032                1.000                1.000                0.024
where(no OP)         0.054                0.032                1.000                1.000                0.024
group(no Having)     0.333                0.015                0.098                0.049                0.064
group                0.333                0.015                0.098                0.049                0.064
order                1.000                1.000                0.069                0.049                0.034
and/or               1.000                0.947                0.945                0.936                0.958
IUEN                 1.000                1.000                1.000                1.000                1.000
keywords             0.089                0.056                0.034                0.024                0.051
